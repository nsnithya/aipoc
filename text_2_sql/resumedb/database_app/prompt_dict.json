{"perpetrator": "Table perpetrator = [*, perpetrator_id, people_id, date, year, location, country, killed, injured]\nTable people = [*, people_id, name, height, weight, home town]\nforeign_keys = [perpetrator.People_ID = people.People_ID]", "college_2": "Table classroom = [*, building, room_number, capacity]\nTable department = [*, dept_name, building, budget]\nTable course = [*, course_id, title, dept_name, credits]\nTable instructor = [*, id, name, dept_name, salary]\nTable section = [*, course_id, sec_id, semester, year, building, room_number, time_slot_id]\nTable teaches = [*, id, course_id, sec_id, semester, year]\nTable student = [*, id, name, dept_name, tot_cred]\nTable takes = [*, id, course_id, sec_id, semester, year, grade]\nTable advisor = [*, s_id, i_id]\nTable time_slot = [*, time_slot_id, day, start_hr, start_min, end_hr, end_min]\nTable prereq = [*, course_id, prereq_id]\nforeign_keys = [course.dept_name = department.dept_name, instructor.dept_name = department.dept_name, section.building = classroom.building, section.room_number = classroom.room_number, section.course_id = course.course_id, teaches.ID = instructor.ID, teaches.course_id = section.course_id, teaches.sec_id = section.sec_id, teaches.semester = section.semester, teaches.year = section.year, student.dept_name = department.dept_name, takes.ID = student.ID, takes.course_id = section.course_id, takes.sec_id = section.sec_id, takes.semester = section.semester, takes.year = section.year, advisor.s_ID = student.ID, advisor.i_ID = instructor.ID, prereq.prereq_id = course.course_id, prereq.course_id = course.course_id]", "flight_company": "Table airport = [*, id, city, country, iata, icao, name]\nTable operate_company = [*, id, name, type, principal_activities, incorporated_in, group_equity_shareholding]\nTable flight = [*, id, vehicle_flight_number, date, pilot, velocity, altitude, airport_id, company_id]\nforeign_keys = [flight.company_id = operate_company.id, flight.airport_id = airport.id]", "icfp_1": "Table inst = [*, instid, name, country]\nTable authors = [*, authid, lname, fname]\nTable papers = [*, paperid, title]\nTable authorship = [*, authid, instid, paperid, authorder]\nforeign_keys = [Authorship.paperID = Papers.paperID, Authorship.instID = Inst.instID, Authorship.authID = Authors.authID]", "body_builder": "Table body_builder = [*, body_builder_id, people_id, snatch, clean_jerk, total]\nTable people = [*, people_id, name, height, weight, birth_date, birth_place]\nforeign_keys = [body_builder.People_ID = people.People_ID]", "storm_record": "Table storm = [*, storm_id, name, dates_active, max_speed, damage_millions_usd, number_deaths]\nTable region = [*, region_id, region_code, region_name]\nTable affected_region = [*, region_id, storm_id, number_city_affected]\nforeign_keys = [affected_region.Storm_ID = storm.Storm_ID, affected_region.Region_id = region.Region_id]", "pilot_record": "Table aircraft = [*, aircraft_id, order_year, manufacturer, model, fleet_series, powertrain, fuel_propulsion]\nTable pilot = [*, pilot_id, pilot_name, rank, age, nationality, position, join_year, team]\nTable pilot_record = [*, record_id, pilot_id, aircraft_id, date]\nforeign_keys = [pilot_record.Aircraft_ID = aircraft.Aircraft_ID, pilot_record.Pilot_ID = pilot.Pilot_ID]", "race_track": "Table race = [*, race_id, name, class, date, track_id]\nTable track = [*, track_id, name, location, seating, year_opened]\nforeign_keys = [race.Track_ID = track.Track_ID]", "academic": "Table author = [*, aid, homepage, name, oid]\nTable conference = [*, cid, homepage, name]\nTable domain = [*, did, name]\nTable domain_author = [*, aid, did]\nTable domain_conference = [*, cid, did]\nTable journal = [*, homepage, jid, name]\nTable domain_journal = [*, did, jid]\nTable keyword = [*, keyword, kid]\nTable domain_keyword = [*, did, kid]\nTable publication = [*, abstract, cid, citation_num, jid, pid, reference_num, title, year]\nTable domain_publication = [*, did, pid]\nTable organization = [*, continent, homepage, name, oid]\nTable publication_keyword = [*, pid, kid]\nTable writes = [*, aid, pid]\nTable cite = [*, cited, citing]\nforeign_keys = [domain_author.did = domain.did, domain_author.aid = author.aid, domain_conference.did = domain.did, domain_conference.cid = conference.cid, domain_journal.did = domain.did, domain_journal.jid = journal.jid, domain_keyword.did = domain.did, domain_keyword.kid = keyword.kid, publication.cid = conference.cid, publication.jid = journal.jid, domain_publication.did = domain.did, domain_publication.pid = publication.pid, publication_keyword.kid = keyword.kid, publication_keyword.pid = publication.pid, writes.aid = author.aid, writes.pid = publication.pid, cite.citing = publication.pid, cite.cited = publication.pid]", "department_store": "Table addresses = [*, address_id, address_details]\nTable staff = [*, staff_id, staff_gender, staff_name]\nTable suppliers = [*, supplier_id, supplier_name, supplier_phone]\nTable department_store_chain = [*, dept_store_chain_id, dept_store_chain_name]\nTable customers = [*, customer_id, payment_method_code, customer_code, customer_name, customer_address, customer_phone, customer_email]\nTable products = [*, product_id, product_type_code, product_name, product_price]\nTable supplier_addresses = [*, supplier_id, address_id, date_from, date_to]\nTable customer_addresses = [*, customer_id, address_id, date_from, date_to]\nTable customer_orders = [*, order_id, customer_id, order_status_code, order_date]\nTable department_stores = [*, dept_store_id, dept_store_chain_id, store_name, store_address, store_phone, store_email]\nTable departments = [*, department_id, dept_store_id, department_name]\nTable order_items = [*, order_item_id, order_id, product_id]\nTable product_suppliers = [*, product_id, supplier_id, date_supplied_from, date_supplied_to, total_amount_purchased, total_value_purchased]\nTable staff_department_assignments = [*, staff_id, department_id, date_assigned_from, job_title_code, date_assigned_to]\nforeign_keys = [Supplier_Addresses.supplier_id = Suppliers.supplier_id, Supplier_Addresses.address_id = Addresses.address_id, Customer_Addresses.customer_id = Customers.customer_id, Customer_Addresses.address_id = Addresses.address_id, Customer_Orders.customer_id = Customers.customer_id, Department_Stores.dept_store_chain_id = Department_Store_Chain.dept_store_chain_id, Departments.dept_store_id = Department_Stores.dept_store_id, Order_Items.product_id = Products.product_id, Order_Items.order_id = Customer_Orders.order_id, Product_Suppliers.product_id = Products.product_id, Product_Suppliers.supplier_id = Suppliers.supplier_id, Staff_Department_Assignments.staff_id = Staff.staff_id, Staff_Department_Assignments.department_id = Departments.department_id]", "music_4": "Table artist = [*, artist_id, artist, age, famous_title, famous_release_date]\nTable volume = [*, volume_id, volume_issue, issue_date, weeks_on_top, song, artist_id]\nTable music_festival = [*, id, music_festival, date_of_ceremony, category, volume, result]\nforeign_keys = [volume.Artist_ID = artist.Artist_ID, music_festival.Volume = volume.Volume_ID]", "insurance_fnol": "Table customers = [*, customer_id, customer_name]\nTable services = [*, service_id, service_name]\nTable available_policies = [*, policy_id, policy_type_code, customer_phone]\nTable customers_policies = [*, customer_id, policy_id, date_opened, date_closed]\nTable first_notification_of_loss = [*, fnol_id, customer_id, policy_id, service_id]\nTable claims = [*, claim_id, fnol_id, effective_date]\nTable settlements = [*, settlement_id, claim_id, effective_date, settlement_amount]\nforeign_keys = [Customers_Policies.Policy_ID = Available_Policies.Policy_ID, Customers_Policies.Customer_ID = Customers.Customer_ID, First_Notification_of_Loss.Customer_ID = Customers_Policies.Customer_ID, First_Notification_of_Loss.Policy_ID = Customers_Policies.Policy_ID, First_Notification_of_Loss.Service_ID = Services.Service_ID, Claims.FNOL_ID = First_Notification_of_Loss.FNOL_ID, Settlements.Claim_ID = Claims.Claim_ID]", "cinema": "Table film = [*, film_id, rank_in_series, number_in_season, title, directed_by, original_air_date, production_code]\nTable cinema = [*, cinema_id, name, openning_year, capacity, location]\nTable schedule = [*, cinema_id, film_id, date, show_times_per_day, price]\nforeign_keys = [schedule.Cinema_ID = cinema.Cinema_ID, schedule.Film_ID = film.Film_ID]", "decoration_competition": "Table college = [*, college_id, name, leader_name, college_location]\nTable member = [*, member_id, name, country, college_id]\nTable round = [*, round_id, member_id, decoration_theme, rank_in_round]\nforeign_keys = [member.College_ID = college.College_ID, round.Member_ID = member.Member_ID]", "phone_market": "Table phone = [*, name, phone_id, memory_in_g, carrier, price]\nTable market = [*, market_id, district, num_of_employees, num_of_shops, ranking]\nTable phone_market = [*, market_id, phone_id, num_of_stock]\nforeign_keys = [phone_market.Phone_ID = phone.Phone_ID, phone_market.Market_ID = market.Market_ID]", "store_product": "Table product = [*, product_id, product, dimensions, dpi, pages_per_minute_color, max_page_size, interface]\nTable store = [*, store_id, store_name, type, area_size, number_of_product_category, ranking]\nTable district = [*, district_id, district_name, headquartered_city, city_population, city_area]\nTable store_product = [*, store_id, product_id]\nTable store_district = [*, store_id, district_id]\nforeign_keys = [store_product.Store_ID = store.Store_ID, store_district.District_ID = district.District_ID, store_district.Store_ID = store.Store_ID]", "assets_maintenance": "Table third_party_companies = [*, company_id, company_type, company_name, company_address, other_company_details]\nTable maintenance_contracts = [*, maintenance_contract_id, maintenance_contract_company_id, contract_start_date, contract_end_date, other_contract_details]\nTable parts = [*, part_id, part_name, chargeable_yn, chargeable_amount, other_part_details]\nTable skills = [*, skill_id, skill_code, skill_description]\nTable staff = [*, staff_id, staff_name, gender, other_staff_details]\nTable assets = [*, asset_id, maintenance_contract_id, supplier_company_id, asset_details, asset_make, asset_model, asset_acquired_date, asset_disposed_date, other_asset_details]\nTable asset_parts = [*, asset_id, part_id]\nTable maintenance_engineers = [*, engineer_id, company_id, first_name, last_name, other_details]\nTable engineer_skills = [*, engineer_id, skill_id]\nTable fault_log = [*, fault_log_entry_id, asset_id, recorded_by_staff_id, fault_log_entry_datetime, fault_description, other_fault_details]\nTable engineer_visits = [*, engineer_visit_id, contact_staff_id, engineer_id, fault_log_entry_id, fault_status, visit_start_datetime, visit_end_datetime, other_visit_details]\nTable part_faults = [*, part_fault_id, part_id, fault_short_name, fault_description, other_fault_details]\nTable fault_log_parts = [*, fault_log_entry_id, part_fault_id, fault_status]\nTable skills_required_to_fix = [*, part_fault_id, skill_id]\nforeign_keys = [Maintenance_Contracts.maintenance_contract_company_id = Third_Party_Companies.company_id, Assets.supplier_company_id = Third_Party_Companies.company_id, Assets.maintenance_contract_id = Maintenance_Contracts.maintenance_contract_id, Asset_Parts.asset_id = Assets.asset_id, Asset_Parts.part_id = Parts.part_id, Maintenance_Engineers.company_id = Third_Party_Companies.company_id, Engineer_Skills.skill_id = Skills.skill_id, Engineer_Skills.engineer_id = Maintenance_Engineers.engineer_id, Fault_Log.recorded_by_staff_id = Staff.staff_id, Fault_Log.asset_id = Assets.asset_id, Engineer_Visits.contact_staff_id = Staff.staff_id, Engineer_Visits.engineer_id = Maintenance_Engineers.engineer_id, Engineer_Visits.fault_log_entry_id = Fault_Log.fault_log_entry_id, Part_Faults.part_id = Parts.part_id, Fault_Log_Parts.fault_log_entry_id = Fault_Log.fault_log_entry_id, Fault_Log_Parts.part_fault_id = Part_Faults.part_fault_id, Skills_Required_To_Fix.skill_id = Skills.skill_id, Skills_Required_To_Fix.part_fault_id = Part_Faults.part_fault_id]", "student_assessment": "Table addresses = [*, address_id, line_1, line_2, city, zip_postcode, state_province_county, country]\nTable people = [*, person_id, first_name, middle_name, last_name, cell_mobile_number, email_address, login_name, password]\nTable students = [*, student_id, student_details]\nTable courses = [*, course_id, course_name, course_description, other_details]\nTable people_addresses = [*, person_address_id, person_id, address_id, date_from, date_to]\nTable student_course_registrations = [*, student_id, course_id, registration_date]\nTable student_course_attendance = [*, student_id, course_id, date_of_attendance]\nTable candidates = [*, candidate_id, candidate_details]\nTable candidate_assessments = [*, candidate_id, qualification, assessment_date, asessment_outcome_code]\nforeign_keys = [Students.student_id = People.person_id, People_Addresses.address_id = Addresses.address_id, People_Addresses.person_id = People.person_id, Student_Course_Registrations.course_id = Courses.course_id, Student_Course_Registrations.student_id = Students.student_id, Student_Course_Attendance.student_id = Student_Course_Registrations.student_id, Student_Course_Attendance.course_id = Student_Course_Registrations.course_id, Candidates.candidate_id = People.person_id, Candidate_Assessments.candidate_id = Candidates.candidate_id]", "dog_kennels": "Table breeds = [*, breed_code, breed_name]\nTable charges = [*, charge_id, charge_type, charge_amount]\nTable sizes = [*, size_code, size_description]\nTable treatment_types = [*, treatment_type_code, treatment_type_description]\nTable owners = [*, owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number]\nTable dogs = [*, dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed]\nTable professionals = [*, professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number]\nTable treatments = [*, treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment]\nforeign_keys = [Dogs.owner_id = Owners.owner_id, Dogs.owner_id = Owners.owner_id, Dogs.size_code = Sizes.size_code, Dogs.breed_code = Breeds.breed_code, Treatments.dog_id = Dogs.dog_id, Treatments.professional_id = Professionals.professional_id, Treatments.treatment_type_code = Treatment_Types.treatment_type_code]", "music_1": "Table genre = [*, g_name, rating, most_popular_in]\nTable artist = [*, artist_name, country, gender, preferred_genre]\nTable files = [*, f_id, artist_name, file_size, duration, formats]\nTable song = [*, song_name, artist_name, country, f_id, genre_is, rating, languages, releasedate, resolution]\nforeign_keys = [artist.preferred_genre = genre.g_name, files.artist_name = artist.artist_name, song.genre_is = genre.g_name, song.f_id = files.f_id, song.artist_name = artist.artist_name]", "company_employee": "Table people = [*, people_id, age, name, nationality, graduation_college]\nTable company = [*, company_id, name, headquarters, industry, sales_in_billion, profits_in_billion, assets_in_billion, market_value_in_billion]\nTable employment = [*, company_id, people_id, year_working]\nforeign_keys = [employment.People_ID = people.People_ID, employment.Company_ID = company.Company_ID]", "farm": "Table city = [*, city_id, official_name, status, area_km_2, population, census_ranking]\nTable farm = [*, farm_id, year, total_horses, working_horses, total_cattle, oxen, bulls, cows, pigs, sheep_and_goats]\nTable farm_competition = [*, competition_id, year, theme, host_city_id, hosts]\nTable competition_record = [*, competition_id, farm_id, rank]\nforeign_keys = [farm_competition.Host_city_ID = city.City_ID, competition_record.Farm_ID = farm.Farm_ID, competition_record.Competition_ID = farm_competition.Competition_ID]", "solvency_ii": "Table addresses = [*, address_id, address_details]\nTable locations = [*, location_id, other_details]\nTable products = [*, product_id, product_type_code, product_name, product_price]\nTable parties = [*, party_id, party_details]\nTable assets = [*, asset_id, other_details]\nTable channels = [*, channel_id, other_details]\nTable finances = [*, finance_id, other_details]\nTable events = [*, event_id, address_id, channel_id, event_type_code, finance_id, location_id]\nTable products_in_events = [*, product_in_event_id, event_id, product_id]\nTable parties_in_events = [*, party_id, event_id, role_code]\nTable agreements = [*, document_id, event_id]\nTable assets_in_events = [*, asset_id, event_id]\nforeign_keys = [Events.Finance_ID = Finances.Finance_ID, Events.Address_ID = Addresses.Address_ID, Events.Location_ID = Locations.Location_ID, Products_in_Events.Product_ID = Products.Product_ID, Products_in_Events.Event_ID = Events.Event_ID, Parties_in_Events.Event_ID = Events.Event_ID, Parties_in_Events.Party_ID = Parties.Party_ID, Agreements.Event_ID = Events.Event_ID, Assets_in_Events.Event_ID = Events.Event_ID, Assets_in_Events.Event_ID = Events.Event_ID]", "city_record": "Table city = [*, city_id, city, hanzi, hanyu_pinyin, regional_population, gdp]\nTable match = [*, match_id, date, venue, score, result, competition]\nTable temperature = [*, city_id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec]\nTable hosting_city = [*, year, match_id, host_city]\nforeign_keys = [temperature.City_ID = city.City_ID, hosting_city.Match_ID = match.Match_ID, hosting_city.Host_City = city.City_ID]", "swimming": "Table swimmer = [*, id, name, nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, time]\nTable stadium = [*, id, name, capacity, city, country, opening_year]\nTable event = [*, id, name, stadium_id, year]\nTable record = [*, id, result, swimmer_id, event_id]\nforeign_keys = [event.Stadium_ID = stadium.ID, record.Swimmer_ID = swimmer.ID, record.Event_ID = event.ID]", "flight_2": "Table airlines = [*, uid, airline, abbreviation, country]\nTable airports = [*, city, airportcode, airportname, country, countryabbrev]\nTable flights = [*, airline, flightno, sourceairport, destairport]\nforeign_keys = [flights.DestAirport = airports.AirportCode, flights.SourceAirport = airports.AirportCode]", "election": "Table county = [*, county_id, county_name, population, zip_code]\nTable party = [*, party_id, year, party, governor, lieutenant_governor, comptroller, attorney_general, us_senate]\nTable election = [*, election_id, counties_represented, district, delegate, party, first_elected, committee]\nforeign_keys = [election.District = county.County_Id, election.Party = party.Party_ID]", "manufactory_1": "Table manufacturers = [*, code, name, headquarter, founder, revenue]\nTable products = [*, code, name, price, manufacturer]\nforeign_keys = [Products.Manufacturer = Manufacturers.Code]", "debate": "Table people = [*, people_id, district, name, party, age]\nTable debate = [*, debate_id, date, venue, num_of_audience]\nTable debate_people = [*, debate_id, affirmative, negative, if_affirmative_win]\nforeign_keys = [debate_people.Negative = people.People_ID, debate_people.Affirmative = people.People_ID, debate_people.Debate_ID = debate.Debate_ID]", "network_2": "Table person = [*, name, age, city, gender, job]\nTable personfriend = [*, name, friend, year]\nforeign_keys = [PersonFriend.friend = Person.name, PersonFriend.name = Person.name]", "local_govt_in_alabama": "Table services = [*, service_id, service_type_code]\nTable participants = [*, participant_id, participant_type_code, participant_details]\nTable events = [*, event_id, service_id, event_details]\nTable participants_in_events = [*, event_id, participant_id]\nforeign_keys = [Events.Service_ID = Services.Service_ID, Participants_in_Events.Event_ID = Events.Event_ID, Participants_in_Events.Participant_ID = Participants.Participant_ID]", "climbing": "Table mountain = [*, mountain_id, name, height, prominence, range, country]\nTable climber = [*, climber_id, name, country, time, points, mountain_id]\nforeign_keys = [climber.Mountain_ID = mountain.Mountain_ID]", "e_learning": "Table course_authors_and_tutors = [*, author_id, author_tutor_atb, login_name, password, personal_name, middle_name, family_name, gender_mf, address_line_1]\nTable students = [*, student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name]\nTable subjects = [*, subject_id, subject_name]\nTable courses = [*, course_id, author_id, subject_id, course_name, course_description]\nTable student_course_enrolment = [*, registration_id, student_id, course_id, date_of_enrolment, date_of_completion]\nTable student_tests_taken = [*, registration_id, date_test_taken, test_result]\nforeign_keys = [Courses.subject_id = Subjects.subject_id, Courses.author_id = Course_Authors_and_Tutors.author_id, Student_Course_Enrolment.student_id = Students.student_id, Student_Course_Enrolment.course_id = Courses.course_id, Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id]", "scientist_1": "Table scientists = [*, ssn, name]\nTable projects = [*, code, name, hours]\nTable assignedto = [*, scientist, project]\nforeign_keys = [AssignedTo.Project = Projects.Code, AssignedTo.Scientist = Scientists.SSN]", "ship_1": "Table captain = [*, captain_id, name, ship_id, age, class, rank]\nTable ship = [*, ship_id, name, type, built_year, class, flag]\nforeign_keys = [captain.Ship_ID = Ship.Ship_ID]", "entertainment_awards": "Table festival_detail = [*, festival_id, festival_name, chair_name, location, year, num_of_audience]\nTable artwork = [*, artwork_id, type, name]\nTable nomination = [*, artwork_id, festival_id, result]\nforeign_keys = [nomination.Festival_ID = festival_detail.Festival_ID, nomination.Artwork_ID = artwork.Artwork_ID]", "allergy_1": "Table allergy_type = [*, allergy, allergytype]\nTable has_allergy = [*, stuid, allergy]\nTable student = [*, stuid, lname, fname, age, sex, major, advisor, city_code]\nforeign_keys = [Has_Allergy.Allergy = Allergy_Type.Allergy, Has_Allergy.StuID = Student.StuID]", "imdb": "Table actor = [*, aid, gender, name, nationality, birth_city, birth_year]\nTable copyright = [*, id, msid, cid]\nTable cast = [*, id, msid, aid, role]\nTable genre = [*, gid, genre]\nTable classification = [*, id, msid, gid]\nTable company = [*, id, name, country_code]\nTable director = [*, did, gender, name, nationality, birth_city, birth_year]\nTable producer = [*, pid, gender, name, nationality, birth_city, birth_year]\nTable directed_by = [*, id, msid, did]\nTable keyword = [*, id, keyword]\nTable made_by = [*, id, msid, pid]\nTable movie = [*, mid, title, release_year, title_aka, budget]\nTable tags = [*, id, msid, kid]\nTable tv_series = [*, sid, title, release_year, num_of_seasons, num_of_episodes, title_aka, budget]\nTable writer = [*, wid, gender, name, nationality, num_of_episodes, birth_city, birth_year]\nTable written_by = [*, id, msid, wid]\nforeign_keys = [cast.msid = copyright.msid, cast.aid = actor.aid, classification.msid = copyright.msid, classification.gid = genre.gid, directed_by.did = director.did, directed_by.msid = copyright.msid, made_by.pid = producer.pid, made_by.msid = copyright.msid, tags.msid = copyright.msid, written_by.wid = writer.wid, written_by.msid = copyright.msid]", "products_for_hire": "Table discount_coupons = [*, coupon_id, date_issued, coupon_amount]\nTable customers = [*, customer_id, coupon_id, good_or_bad_customer, first_name, last_name, gender_mf, date_became_customer, date_last_hire]\nTable bookings = [*, booking_id, customer_id, booking_status_code, returned_damaged_yn, booking_start_date, booking_end_date, count_hired, amount_payable, amount_of_discount, amount_outstanding, amount_of_refund]\nTable products_for_hire = [*, product_id, product_type_code, daily_hire_cost, product_name, product_description]\nTable payments = [*, payment_id, booking_id, customer_id, payment_type_code, amount_paid_in_full_yn, payment_date, amount_due, amount_paid]\nTable products_booked = [*, booking_id, product_id, returned_yn, returned_late_yn, booked_count, booked_amount]\nTable view_product_availability = [*, product_id, booking_id, status_date, available_yn]\nforeign_keys = [Customers.coupon_id = Discount_Coupons.coupon_id, Bookings.customer_id = Customers.customer_id, Payments.customer_id = Customers.customer_id, Payments.booking_id = Bookings.booking_id, Products_Booked.product_id = Products_for_Hire.product_id, Products_Booked.booking_id = Bookings.booking_id, View_Product_Availability.product_id = Products_for_Hire.product_id, View_Product_Availability.booking_id = Bookings.booking_id]", "candidate_poll": "Table candidate = [*, candidate_id, people_id, poll_source, date, support_rate, consider_rate, oppose_rate, unsure_rate]\nTable people = [*, people_id, sex, name, date_of_birth, height, weight]\nforeign_keys = [candidate.People_ID = people.People_ID]", "chinook_1": "Table album = [*, albumid, title, artistid]\nTable artist = [*, artistid, name]\nTable customer = [*, customerid, firstname, lastname, company, address, city, state, country, postalcode, phone, fax, email, supportrepid]\nTable employee = [*, employeeid, lastname, firstname, title, reportsto, birthdate, hiredate, address, city, state, country, postalcode, phone, fax, email]\nTable genre = [*, genreid, name]\nTable invoice = [*, invoiceid, customerid, invoicedate, billingaddress, billingcity, billingstate, billingcountry, billingpostalcode, total]\nTable invoiceline = [*, invoicelineid, invoiceid, trackid, unitprice, quantity]\nTable mediatype = [*, mediatypeid, name]\nTable playlist = [*, playlistid, name]\nTable playlisttrack = [*, playlistid, trackid]\nTable track = [*, trackid, name, albumid, mediatypeid, genreid, composer, milliseconds, bytes, unitprice]\nforeign_keys = [Album.ArtistId = Artist.ArtistId, Customer.SupportRepId = Employee.EmployeeId, Employee.ReportsTo = Employee.EmployeeId, Invoice.CustomerId = Customer.CustomerId, InvoiceLine.TrackId = Track.TrackId, InvoiceLine.InvoiceId = Invoice.InvoiceId, PlaylistTrack.TrackId = Track.TrackId, PlaylistTrack.PlaylistId = Playlist.PlaylistId, Track.MediaTypeId = MediaType.MediaTypeId, Track.GenreId = Genre.GenreId, Track.AlbumId = Album.AlbumId]", "flight_4": "Table routes = [*, rid, dst_apid, dst_ap, src_apid, src_ap, alid, airline, codeshare]\nTable airports = [*, apid, name, city, country, x, y, elevation, iata, icao]\nTable airlines = [*, alid, name, iata, icao, callsign, country, active]\nforeign_keys = [routes.alid = airlines.alid, routes.src_apid = airports.apid, routes.dst_apid = airports.apid]", "pets_1": "Table student = [*, stuid, lname, fname, age, sex, major, advisor, city_code]\nTable has_pet = [*, stuid, petid]\nTable pets = [*, petid, pettype, pet_age, weight]\nforeign_keys = [Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID]", "dorm_1": "Table student = [*, stuid, lname, fname, age, sex, major, advisor, city_code]\nTable dorm = [*, dormid, dorm_name, student_capacity, gender]\nTable dorm_amenity = [*, amenid, amenity_name]\nTable has_amenity = [*, dormid, amenid]\nTable lives_in = [*, stuid, dormid, room_number]\nforeign_keys = [Has_amenity.amenid = Dorm_amenity.amenid, Has_amenity.dormid = Dorm.dormid, Lives_in.dormid = Dorm.dormid, Lives_in.stuid = Student.StuID]", "journal_committee": "Table journal = [*, journal_id, date, theme, sales]\nTable editor = [*, editor_id, name, age]\nTable journal_committee = [*, editor_id, journal_id, work_type]\nforeign_keys = [journal_committee.Journal_ID = journal.Journal_ID, journal_committee.Editor_ID = editor.Editor_ID]", "flight_1": "Table flight = [*, flno, origin, destination, distance, departure_date, arrival_date, price, aid]\nTable aircraft = [*, aid, name, distance]\nTable employee = [*, eid, name, salary]\nTable certificate = [*, eid, aid]\nforeign_keys = [flight.aid = aircraft.aid, certificate.aid = aircraft.aid, certificate.eid = employee.eid]", "medicine_enzyme_interaction": "Table medicine = [*, id, name, trade_name, fda_approved]\nTable enzyme = [*, id, name, location, product, chromosome, omim, porphyria]\nTable medicine_enzyme_interaction = [*, enzyme_id, medicine_id, interaction_type]\nforeign_keys = [medicine_enzyme_interaction.medicine_id = medicine.id, medicine_enzyme_interaction.enzyme_id = enzyme.id]", "local_govt_and_lot": "Table customers = [*, customer_id, customer_details]\nTable properties = [*, property_id, property_type_code, property_address, other_details]\nTable residents = [*, resident_id, property_id, date_moved_in, date_moved_out, other_details]\nTable organizations = [*, organization_id, parent_organization_id, organization_details]\nTable services = [*, service_id, organization_id, service_type_code, service_details]\nTable residents_services = [*, resident_id, service_id, date_moved_in, property_id, date_requested, date_provided, other_details]\nTable things = [*, thing_id, organization_id, type_of_thing_code, service_type_code, service_details]\nTable customer_events = [*, customer_event_id, customer_id, date_moved_in, property_id, resident_id, thing_id]\nTable customer_event_notes = [*, customer_event_note_id, customer_event_id, service_type_code, resident_id, property_id, date_moved_in]\nTable timed_status_of_things = [*, thing_id, date_and_date, status_of_thing_code]\nTable timed_locations_of_things = [*, thing_id, date_and_time, location_code]\nforeign_keys = [Residents.property_id = Properties.property_id, Services.organization_id = Organizations.organization_id, Residents_Services.resident_id = Residents.resident_id, Residents_Services.property_id = Residents.property_id, Residents_Services.date_moved_in = Residents.date_moved_in, Residents_Services.service_id = Services.service_id, Things.organization_id = Organizations.organization_id, Customer_Events.resident_id = Residents.resident_id, Customer_Events.property_id = Residents.property_id, Customer_Events.date_moved_in = Residents.date_moved_in, Customer_Events.customer_id = Customers.customer_id, Customer_Events.thing_id = Things.thing_id, Customer_Event_Notes.Customer_Event_ID = Customer_Events.Customer_Event_ID, Timed_Status_of_Things.thing_id = Things.thing_id, Timed_Locations_of_Things.thing_id = Things.thing_id]", "station_weather": "Table train = [*, id, train_number, name, origin, destination, time, interval]\nTable station = [*, id, network_name, services, local_authority]\nTable route = [*, train_id, station_id]\nTable weekly_weather = [*, station_id, day_of_week, high_temperature, low_temperature, precipitation, wind_speed_mph]\nforeign_keys = [route.station_id = station.id, route.train_id = train.id, weekly_weather.station_id = station.id]", "shop_membership": "Table member = [*, member_id, card_number, name, hometown, level]\nTable branch = [*, branch_id, name, open_year, address_road, city, membership_amount]\nTable membership_register_branch = [*, member_id, branch_id, register_year]\nTable purchase = [*, member_id, branch_id, year, total_pounds]\nforeign_keys = [membership_register_branch.Branch_ID = branch.Branch_ID, membership_register_branch.Member_ID = member.Member_ID, purchase.Branch_ID = branch.Branch_ID, purchase.Member_ID = member.Member_ID]", "driving_school": "Table addresses = [*, address_id, line_1_number_building, city, zip_postcode, state_province_county, country]\nTable staff = [*, staff_id, staff_address_id, nickname, first_name, middle_name, last_name, date_of_birth, date_joined_staff, date_left_staff]\nTable vehicles = [*, vehicle_id, vehicle_details]\nTable customers = [*, customer_id, customer_address_id, customer_status_code, date_became_customer, date_of_birth, first_name, last_name, amount_outstanding, email_address, phone_number, cell_mobile_phone_number]\nTable customer_payments = [*, customer_id, datetime_payment, payment_method_code, amount_payment]\nTable lessons = [*, lesson_id, customer_id, lesson_status_code, staff_id, vehicle_id, lesson_date, lesson_time, price]\nforeign_keys = [Staff.staff_address_id = Addresses.address_id, Customers.customer_address_id = Addresses.address_id, Customer_Payments.customer_id = Customers.customer_id, Lessons.customer_id = Customers.customer_id, Lessons.staff_id = Staff.staff_id, Lessons.vehicle_id = Vehicles.vehicle_id]", "concert_singer": "Table stadium = [*, stadium_id, location, name, capacity, highest, lowest, average]\nTable singer = [*, singer_id, name, country, song_name, song_release_year, age, is_male]\nTable concert = [*, concert_id, concert_name, theme, stadium_id, year]\nTable singer_in_concert = [*, concert_id, singer_id]\nforeign_keys = [concert.Stadium_ID = stadium.Stadium_ID, singer_in_concert.Singer_ID = singer.Singer_ID, singer_in_concert.concert_ID = concert.concert_ID]", "music_2": "Table songs = [*, songid, title]\nTable albums = [*, aid, title, year, label, type]\nTable band = [*, id, firstname, lastname]\nTable instruments = [*, songid, bandmateid, instrument]\nTable performance = [*, songid, bandmate, stageposition]\nTable tracklists = [*, albumid, position, songid]\nTable vocals = [*, songid, bandmate, type]\nforeign_keys = [Instruments.BandmateId = Band.Id, Instruments.SongId = Songs.SongId, Performance.Bandmate = Band.Id, Performance.SongId = Songs.SongId, Tracklists.AlbumId = Albums.AId, Tracklists.SongId = Songs.SongId, Vocals.Bandmate = Band.Id, Vocals.SongId = Songs.SongId]", "sports_competition": "Table club = [*, club_id, name, region, start_year]\nTable club_rank = [*, rank, club_id, gold, silver, bronze, total]\nTable player = [*, player_id, name, position, club_id, apps, tries, goals, points]\nTable competition = [*, competition_id, year, competition_type, country]\nTable competition_result = [*, competition_id, club_id_1, club_id_2, score]\nforeign_keys = [club_rank.Club_ID = club.Club_ID, player.Club_ID = club.Club_ID, competition_result.Competition_ID = competition.Competition_ID, competition_result.Club_ID_2 = club.Club_ID, competition_result.Club_ID_1 = club.Club_ID]", "railway": "Table railway = [*, railway_id, railway, builder, built, wheels, location, objectnumber]\nTable train = [*, train_id, train_num, name, from, arrival, railway_id]\nTable manager = [*, manager_id, name, country, working_year_starts, age, level]\nTable railway_manage = [*, railway_id, manager_id, from_year]\nforeign_keys = [train.Railway_ID = railway.Railway_ID, railway_manage.Railway_ID = railway.Railway_ID, railway_manage.Manager_ID = manager.Manager_ID]", "inn_1": "Table rooms = [*, roomid, roomname, beds, bedtype, maxoccupancy, baseprice, decor]\nTable reservations = [*, code, room, checkin, checkout, rate, lastname, firstname, adults, kids]\nforeign_keys = [Reservations.Room = Rooms.RoomId]", "museum_visit": "Table museum = [*, museum_id, name, num_of_staff, open_year]\nTable visitor = [*, id, name, level_of_membership, age]\nTable visit = [*, museum_id, visitor_id, num_of_ticket, total_spent]\nforeign_keys = [visit.visitor_ID = visitor.ID, visit.Museum_ID = museum.Museum_ID]", "browser_web": "Table web_client_accelerator = [*, id, name, operating_system, client, connection]\nTable browser = [*, id, name, market_share]\nTable accelerator_compatible_browser = [*, accelerator_id, browser_id, compatible_since_year]\nforeign_keys = [accelerator_compatible_browser.browser_id = browser.id, accelerator_compatible_browser.accelerator_id = Web_client_accelerator.id]", "baseball_1": "Table all_star = [*, player_id, year, game_num, game_id, team_id, league_id, gp, starting_pos]\nTable appearances = [*, year, team_id, league_id, player_id, g_all, gs, g_batting, g_defense, g_p, g_c, g_1b, g_2b, g_3b, g_ss, g_lf, g_cf, g_rf, g_of, g_dh, g_ph, g_pr]\nTable manager_award = [*, player_id, award_id, year, league_id, tie, notes]\nTable player_award = [*, player_id, award_id, year, league_id, tie, notes]\nTable manager_award_vote = [*, award_id, year, league_id, player_id, points_won, points_max, votes_first]\nTable player_award_vote = [*, award_id, year, league_id, player_id, points_won, points_max, votes_first]\nTable batting = [*, player_id, year, stint, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]\nTable batting_postseason = [*, year, round, player_id, team_id, league_id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g_idp]\nTable player_college = [*, player_id, college_id, year]\nTable fielding = [*, player_id, year, stint, team_id, league_id, pos, g, gs, inn_outs, po, a, e, dp, pb, wp, sb, cs, zr]\nTable fielding_outfield = [*, player_id, year, stint, glf, gcf, grf]\nTable fielding_postseason = [*, player_id, year, team_id, league_id, round, pos, g, gs, inn_outs, po, a, e, dp, tp, pb, sb, cs]\nTable hall_of_fame = [*, player_id, yearid, votedby, ballots, needed, votes, inducted, category, needed_note]\nTable home_game = [*, year, league_id, team_id, park_id, span_first, span_last, games, openings, attendance]\nTable manager = [*, player_id, year, team_id, league_id, inseason, g, w, l, rank, plyr_mgr]\nTable manager_half = [*, player_id, year, team_id, league_id, inseason, half, g, w, l, rank]\nTable player = [*, player_id, birth_year, birth_month, birth_day, birth_country, birth_state, birth_city, death_year, death_month, death_day, death_country, death_state, death_city, name_first, name_last, name_given, weight, height, bats, throws, debut, final_game, retro_id, bbref_id]\nTable park = [*, park_id, park_name, park_alias, city, state, country]\nTable pitching = [*, player_id, year, stint, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]\nTable pitching_postseason = [*, player_id, year, round, team_id, league_id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g_idp]\nTable salary = [*, year, team_id, league_id, player_id, salary]\nTable college = [*, college_id, name_full, city, state, country]\nTable postseason = [*, year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses, ties]\nTable team = [*, year, league_id, team_id, franchise_id, div_id, rank, g, ghome, w, l, div_win, wc_win, lg_win, ws_win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team_id_br, team_id_lahman45, team_id_retro]\nTable team_franchise = [*, franchise_id, franchise_name, active, na_assoc]\nTable team_half = [*, year, league_id, team_id, half, div_id, div_win, rank, g, w, l]\nforeign_keys = [all_star.player_id = player.player_id, appearances.player_id = player.player_id, appearances.team_id = team.team_id, manager_award.player_id = player.player_id, player_award.player_id = player.player_id, player_award_vote.player_id = player.player_id, batting.player_id = player.player_id, batting_postseason.team_id = team.team_id, batting_postseason.player_id = player.player_id, player_college.college_id = college.college_id, player_college.player_id = player.player_id, fielding.player_id = player.player_id, fielding_outfield.player_id = player.player_id, fielding_postseason.player_id = player.player_id, hall_of_fame.player_id = player.player_id, home_game.park_id = park.park_id, home_game.team_id = team.team_id, manager.team_id = team.team_id, manager_half.team_id = team.team_id]", "architecture": "Table architect = [*, id, name, nationality, gender]\nTable bridge = [*, architect_id, id, name, location, length_meters, length_feet]\nTable mill = [*, architect_id, id, location, name, type, built_year, notes]\nforeign_keys = [bridge.architect_id = architect.id, mill.architect_id = architect.id]", "csu_1": "Table campuses = [*, id, campus, location, county, year]\nTable csu_fees = [*, campus, year, campusfee]\nTable degrees = [*, year, campus, degrees]\nTable discipline_enrollments = [*, campus, discipline, year, undergraduate, graduate]\nTable enrollments = [*, campus, year, totalenrollment_ay, fte_ay]\nTable faculty = [*, campus, year, faculty]\nforeign_keys = [csu_fees.Campus = Campuses.Id, degrees.Campus = Campuses.Id, discipline_enrollments.Campus = Campuses.Id, enrollments.Campus = Campuses.Id, faculty.Campus = Campuses.Id]", "tracking_orders": "Table customers = [*, customer_id, customer_name, customer_details]\nTable invoices = [*, invoice_number, invoice_date, invoice_details]\nTable orders = [*, order_id, customer_id, order_status, date_order_placed, order_details]\nTable products = [*, product_id, product_name, product_details]\nTable order_items = [*, order_item_id, product_id, order_id, order_item_status, order_item_details]\nTable shipments = [*, shipment_id, order_id, invoice_number, shipment_tracking_number, shipment_date, other_shipment_details]\nTable shipment_items = [*, shipment_id, order_item_id]\nforeign_keys = [Orders.customer_id = Customers.customer_id, Order_Items.product_id = Products.product_id, Order_Items.order_id = Orders.order_id, Shipments.invoice_number = Invoices.invoice_number, Shipments.order_id = Orders.order_id, Shipment_Items.shipment_id = Shipments.shipment_id, Shipment_Items.order_item_id = Order_Items.order_item_id]", "insurance_policies": "Table customers = [*, customer_id, customer_details]\nTable customer_policies = [*, policy_id, customer_id, policy_type_code, start_date, end_date]\nTable claims = [*, claim_id, policy_id, date_claim_made, date_claim_settled, amount_claimed, amount_settled]\nTable settlements = [*, settlement_id, claim_id, date_claim_made, date_claim_settled, amount_claimed, amount_settled, customer_policy_id]\nTable payments = [*, payment_id, settlement_id, payment_method_code, date_payment_made, amount_payment]\nforeign_keys = [Customer_Policies.Customer_ID = Customers.Customer_ID, Claims.Policy_ID = Customer_Policies.Policy_ID, Settlements.Claim_ID = Claims.Claim_ID, Payments.Settlement_ID = Settlements.Settlement_ID]", "gas_company": "Table company = [*, company_id, rank, company, headquarters, main_industry, sales_billion, profits_billion, assets_billion, market_value]\nTable gas_station = [*, station_id, open_year, location, manager_name, vice_manager_name, representative_name]\nTable station_company = [*, station_id, company_id, rank_of_the_year]\nforeign_keys = [station_company.Company_ID = company.Company_ID, station_company.Station_ID = gas_station.Station_ID]", "e_government": "Table addresses = [*, address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country]\nTable services = [*, service_id, service_type_code, service_name, service_descriptio]\nTable forms = [*, form_id, form_type_code, service_id, form_number, form_name, form_description]\nTable individuals = [*, individual_id, individual_first_name, individual_middle_name, inidividual_phone, individual_email, individual_address, individual_last_name]\nTable organizations = [*, organization_id, date_formed, organization_name, uk_vat_number]\nTable parties = [*, party_id, payment_method_code, party_phone, party_email]\nTable organization_contact_individuals = [*, individual_id, organization_id, date_contact_from, date_contact_to]\nTable party_addresses = [*, party_id, address_id, date_address_from, address_type_code, date_address_to]\nTable party_forms = [*, party_id, form_id, date_completion_started, form_status_code, date_fully_completed]\nTable party_services = [*, booking_id, customer_id, service_id, service_datetime, booking_made_date]\nforeign_keys = [Forms.service_id = Services.service_id, Organization_Contact_Individuals.individual_id = Individuals.individual_id, Organization_Contact_Individuals.organization_id = Organizations.organization_id, Party_Addresses.party_id = Parties.party_id, Party_Addresses.address_id = Addresses.address_id, Party_Forms.form_id = Forms.form_id, Party_Forms.party_id = Parties.party_id, Party_Services.customer_id = Parties.party_id, Party_Services.service_id = Services.service_id]", "school_bus": "Table driver = [*, driver_id, name, party, home_city, age]\nTable school = [*, school_id, grade, school, location, type]\nTable school_bus = [*, school_id, driver_id, years_working, if_full_time]\nforeign_keys = [school_bus.Driver_ID = driver.Driver_ID, school_bus.School_ID = school.School_ID]", "machine_repair": "Table repair = [*, repair_id, name, launch_date, notes]\nTable machine = [*, machine_id, making_year, class, team, machine_series, value_points, quality_rank]\nTable technician = [*, technician_id, name, team, starting_year, age]\nTable repair_assignment = [*, technician_id, repair_id, machine_id]\nforeign_keys = [repair_assignment.Machine_ID = machine.Machine_ID, repair_assignment.repair_ID = repair.repair_ID, repair_assignment.technician_id = technician.technician_id]", "theme_gallery": "Table artist = [*, artist_id, name, country, year_join, age]\nTable exhibition = [*, exhibition_id, year, theme, artist_id, ticket_price]\nTable exhibition_record = [*, exhibition_id, date, attendance]\nforeign_keys = [exhibition.Artist_ID = artist.Artist_ID, exhibition_record.Exhibition_ID = exhibition.Exhibition_ID]", "film_rank": "Table film = [*, film_id, title, studio, director, gross_in_dollar]\nTable market = [*, market_id, country, number_cities]\nTable film_market_estimation = [*, estimation_id, low_estimate, high_estimate, film_id, type, market_id, year]\nforeign_keys = [film_market_estimation.Market_ID = market.Market_ID, film_market_estimation.Film_ID = film.Film_ID]", "party_people": "Table region = [*, region_id, region_name, date, label, format, catalogue]\nTable party = [*, party_id, minister, took_office, left_office, region_id, party_name]\nTable member = [*, member_id, member_name, party_id, in_office]\nTable party_events = [*, event_id, event_name, party_id, member_in_charge_id]\nforeign_keys = [party.Region_ID = region.Region_ID, member.Party_ID = party.Party_ID, party_events.Member_in_charge_ID = member.Member_ID, party_events.Party_ID = party.Party_ID]", "hospital_1": "Table physician = [*, employeeid, name, position, ssn]\nTable department = [*, departmentid, name, head]\nTable affiliated_with = [*, physician, department, primaryaffiliation]\nTable procedures = [*, code, name, cost]\nTable trained_in = [*, physician, treatment, certificationdate, certificationexpires]\nTable patient = [*, ssn, name, address, phone, insuranceid, pcp]\nTable nurse = [*, employeeid, name, position, registered, ssn]\nTable appointment = [*, appointmentid, patient, prepnurse, physician, start, end, examinationroom]\nTable medication = [*, code, name, brand, description]\nTable prescribes = [*, physician, patient, medication, date, appointment, dose]\nTable block = [*, blockfloor, blockcode]\nTable room = [*, roomnumber, roomtype, blockfloor, blockcode, unavailable]\nTable on_call = [*, nurse, blockfloor, blockcode, oncallstart, oncallend]\nTable stay = [*, stayid, patient, room, staystart, stayend]\nTable undergoes = [*, patient, procedures, stay, dateundergoes, physician, assistingnurse]\nforeign_keys = [Department.Head = Physician.EmployeeID, Affiliated_With.Department = Department.DepartmentID, Affiliated_With.Physician = Physician.EmployeeID, Trained_In.Treatment = Procedures.Code, Trained_In.Physician = Physician.EmployeeID, Patient.PCP = Physician.EmployeeID, Appointment.Physician = Physician.EmployeeID, Appointment.PrepNurse = Nurse.EmployeeID, Appointment.Patient = Patient.SSN, Prescribes.Appointment = Appointment.AppointmentID, Prescribes.Medication = Medication.Code, Prescribes.Patient = Patient.SSN, Prescribes.Physician = Physician.EmployeeID, Room.BlockFloor = Block.BlockFloor, Room.BlockCode = Block.BlockCode, On_Call.BlockFloor = Block.BlockFloor, On_Call.BlockCode = Block.BlockCode, On_Call.Nurse = Nurse.EmployeeID, Stay.Room = Room.RoomNumber, Stay.Patient = Patient.SSN, Undergoes.AssistingNurse = Nurse.EmployeeID, Undergoes.Physician = Physician.EmployeeID, Undergoes.Stay = Stay.StayID, Undergoes.Procedures = Procedures.Code, Undergoes.Patient = Patient.SSN]", "customers_campaigns_ecommerce": "Table premises = [*, premise_id, premises_type, premise_details]\nTable products = [*, product_id, product_category, product_name]\nTable customers = [*, customer_id, payment_method, customer_name, customer_phone, customer_email, customer_address, customer_login, customer_password]\nTable mailshot_campaigns = [*, mailshot_id, product_category, mailshot_name, mailshot_start_date, mailshot_end_date]\nTable customer_addresses = [*, customer_id, premise_id, date_address_from, address_type_code, date_address_to]\nTable customer_orders = [*, order_id, customer_id, order_status_code, shipping_method_code, order_placed_datetime, order_delivered_datetime, order_shipping_charges]\nTable mailshot_customers = [*, mailshot_id, customer_id, outcome_code, mailshot_customer_date]\nTable order_items = [*, item_id, order_item_status_code, order_id, product_id, item_status_code, item_delivered_datetime, item_order_quantity]\nforeign_keys = [Customer_Addresses.customer_id = Customers.customer_id, Customer_Addresses.premise_id = Premises.premise_id, Customer_Orders.customer_id = Customers.customer_id, Mailshot_Customers.mailshot_id = Mailshot_Campaigns.mailshot_id, Mailshot_Customers.customer_id = Customers.customer_id, Order_Items.order_id = Customer_Orders.order_id, Order_Items.product_id = Products.product_id]", "gymnast": "Table gymnast = [*, gymnast_id, floor_exercise_points, pommel_horse_points, rings_points, vault_points, parallel_bars_points, horizontal_bar_points, total_points]\nTable people = [*, people_id, name, age, height, hometown]\nforeign_keys = [gymnast.Gymnast_ID = people.People_ID]", "restaurants": "Table geographic = [*, city_name, county, region]\nTable restaurant = [*, id, name, food_type, city_name, rating]\nTable location = [*, restaurant_id, house_number, street_name, city_name]\nforeign_keys = [RESTAURANT.CITY_NAME = GEOGRAPHIC.CITY_NAME, LOCATION.CITY_NAME = GEOGRAPHIC.CITY_NAME]", "mountain_photos": "Table mountain = [*, id, name, height, prominence, range, country]\nTable camera_lens = [*, id, brand, name, focal_length_mm, max_aperture]\nTable photos = [*, id, camera_lens_id, mountain_id, color, name]\nforeign_keys = [photos.mountain_id = mountain.id, photos.camera_lens_id = camera_lens.id]", "battle_death": "Table battle = [*, id, name, date, bulgarian_commander, latin_commander, result]\nTable ship = [*, lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship]\nTable death = [*, caused_by_ship_id, id, note, killed, injured]\nforeign_keys = [ship.lost_in_battle = battle.id, death.caused_by_ship_id = ship.id]", "cre_Doc_Control_Systems": "Table ref_document_types = [*, document_type_code, document_type_description]\nTable roles = [*, role_code, role_description]\nTable addresses = [*, address_id, address_details]\nTable ref_document_status = [*, document_status_code, document_status_description]\nTable ref_shipping_agents = [*, shipping_agent_code, shipping_agent_name, shipping_agent_description]\nTable documents = [*, document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details]\nTable employees = [*, employee_id, role_code, employee_name, other_details]\nTable document_drafts = [*, document_id, draft_number, draft_details]\nTable draft_copies = [*, document_id, draft_number, copy_number]\nTable circulation_history = [*, document_id, draft_number, copy_number, employee_id]\nTable documents_mailed = [*, document_id, mailed_to_address_id, mailing_date]\nforeign_keys = [Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code, Documents.document_status_code = Ref_Document_Status.document_status_code, Documents.document_type_code = Ref_Document_Types.document_type_code, Employees.role_code = Roles.role_code, Document_Drafts.document_id = Documents.document_id, Draft_Copies.document_id = Document_Drafts.document_id, Draft_Copies.draft_number = Document_Drafts.draft_number, Circulation_History.employee_id = Employees.employee_id, Circulation_History.document_id = Draft_Copies.document_id, Circulation_History.draft_number = Draft_Copies.draft_number, Circulation_History.copy_number = Draft_Copies.copy_number, Documents_Mailed.mailed_to_address_id = Addresses.address_id, Documents_Mailed.document_id = Documents.document_id]", "tracking_share_transactions": "Table investors = [*, investor_id, investor_details]\nTable lots = [*, lot_id, investor_id, lot_details]\nTable ref_transaction_types = [*, transaction_type_code, transaction_type_description]\nTable transactions = [*, transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details]\nTable sales = [*, sales_transaction_id, sales_details]\nTable purchases = [*, purchase_transaction_id, purchase_details]\nTable transactions_lots = [*, transaction_id, lot_id]\nforeign_keys = [Lots.investor_id = Investors.investor_id, Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code, Transactions.investor_id = Investors.investor_id, Sales.sales_transaction_id = Transactions.transaction_id, Purchases.purchase_transaction_id = Transactions.transaction_id, Transactions_Lots.transaction_id = Transactions.transaction_id, Transactions_Lots.lot_id = Lots.lot_id]", "apartment_rentals": "Table apartment_buildings = [*, building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone]\nTable apartments = [*, apt_id, building_id, apt_type_code, apt_number, bathroom_count, bedroom_count, room_count]\nTable apartment_facilities = [*, apt_id, facility_code]\nTable guests = [*, guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth]\nTable apartment_bookings = [*, apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date]\nTable view_unit_status = [*, apt_id, apt_booking_id, status_date, available_yn]\nforeign_keys = [Apartments.building_id = Apartment_Buildings.building_id, Apartment_Facilities.apt_id = Apartments.apt_id, Apartment_Bookings.guest_id = Guests.guest_id, Apartment_Bookings.apt_id = Apartments.apt_id, View_Unit_Status.apt_booking_id = Apartment_Bookings.apt_booking_id, View_Unit_Status.apt_id = Apartments.apt_id]", "student_transcripts_tracking": "Table addresses = [*, address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details]\nTable courses = [*, course_id, course_name, course_description, other_details]\nTable departments = [*, department_id, department_name, department_description, other_details]\nTable degree_programs = [*, degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details]\nTable sections = [*, section_id, course_id, section_name, section_description, other_details]\nTable semesters = [*, semester_id, semester_name, semester_description, other_details]\nTable students = [*, student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details]\nTable student_enrolment = [*, student_enrolment_id, degree_program_id, semester_id, student_id, other_details]\nTable student_enrolment_courses = [*, student_course_id, course_id, student_enrolment_id]\nTable transcripts = [*, transcript_id, transcript_date, other_details]\nTable transcript_contents = [*, student_course_id, transcript_id]\nforeign_keys = [Degree_Programs.department_id = Departments.department_id, Sections.course_id = Courses.course_id, Students.permanent_address_id = Addresses.address_id, Students.current_address_id = Addresses.address_id, Student_Enrolment.student_id = Students.student_id, Student_Enrolment.semester_id = Semesters.semester_id, Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id, Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id, Student_Enrolment_Courses.course_id = Courses.course_id, Transcript_Contents.transcript_id = Transcripts.transcript_id, Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]", "cre_Docs_and_Epenses": "Table ref_document_types = [*, document_type_code, document_type_name, document_type_description]\nTable ref_budget_codes = [*, budget_type_code, budget_type_description]\nTable projects = [*, project_id, project_details]\nTable documents = [*, document_id, document_type_code, project_id, document_date, document_name, document_description, other_details]\nTable statements = [*, statement_id, statement_details]\nTable documents_with_expenses = [*, document_id, budget_type_code, document_details]\nTable accounts = [*, account_id, statement_id, account_details]\nforeign_keys = [Documents.Project_ID = Projects.Project_ID, Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code, Statements.Statement_ID = Documents.Document_ID, Documents_with_Expenses.Document_ID = Documents.Document_ID, Documents_with_Expenses.Budget_Type_Code = Ref_Budget_Codes.Budget_Type_Code, Accounts.Statement_ID = Statements.Statement_ID]", "ship_mission": "Table mission = [*, mission_id, ship_id, code, launched_year, location, speed_knots, fate]\nTable ship = [*, ship_id, name, type, nationality, tonnage]\nforeign_keys = [mission.Ship_ID = ship.Ship_ID]", "company_office": "Table buildings = [*, id, name, city, height, stories, status]\nTable companies = [*, id, name, headquarters, industry, sales_billion, profits_billion, assets_billion, market_value_billion]\nTable office_locations = [*, building_id, company_id, move_in_year]\nforeign_keys = [Office_locations.company_id = Companies.id, Office_locations.building_id = buildings.id]", "tracking_software_problems": "Table problem_category_codes = [*, problem_category_code, problem_category_description]\nTable problem_log = [*, problem_log_id, assigned_to_staff_id, problem_id, problem_category_code, problem_status_code, log_entry_date, log_entry_description, log_entry_fix, other_log_details]\nTable problem_status_codes = [*, problem_status_code, problem_status_description]\nTable product = [*, product_id, product_name, product_details]\nTable staff = [*, staff_id, staff_first_name, staff_last_name, other_staff_details]\nTable problems = [*, problem_id, product_id, closure_authorised_by_staff_id, reported_by_staff_id, date_problem_reported, date_problem_closed, problem_description, other_problem_details]\nforeign_keys = [Problem_Log.problem_status_code = Problem_Status_Codes.problem_status_code, Problem_Log.problem_id = Problems.problem_id, Problem_Log.assigned_to_staff_id = Staff.staff_id, Problem_Log.problem_category_code = Problem_Category_Codes.problem_category_code, Problems.reported_by_staff_id = Staff.staff_id, Problems.product_id = Product.product_id, Problems.closure_authorised_by_staff_id = Staff.staff_id]", "products_gen_characteristics": "Table ref_characteristic_types = [*, characteristic_type_code, characteristic_type_description]\nTable ref_colors = [*, color_code, color_description]\nTable ref_product_categories = [*, product_category_code, product_category_description, unit_of_measure]\nTable characteristics = [*, characteristic_id, characteristic_type_code, characteristic_data_type, characteristic_name, other_characteristic_details]\nTable products = [*, product_id, color_code, product_category_code, product_name, typical_buying_price, typical_selling_price, product_description, other_product_details]\nTable product_characteristics = [*, product_id, characteristic_id, product_characteristic_value]\nforeign_keys = [Characteristics.characteristic_type_code = Ref_Characteristic_Types.characteristic_type_code, Products.color_code = Ref_Colors.color_code, Products.product_category_code = Ref_Product_Categories.product_category_code, Product_Characteristics.product_id = Products.product_id, Product_Characteristics.characteristic_id = Characteristics.characteristic_id]", "coffee_shop": "Table shop = [*, shop_id, address, num_of_staff, score, open_year]\nTable member = [*, member_id, name, membership_card, age, time_of_purchase, level_of_membership, address]\nTable happy_hour = [*, hh_id, shop_id, month, num_of_shaff_in_charge]\nTable happy_hour_member = [*, hh_id, member_id, total_amount]\nforeign_keys = [happy_hour.Shop_ID = shop.Shop_ID, happy_hour_member.Member_ID = member.Member_ID]", "riding_club": "Table player = [*, player_id, sponsor_name, player_name, gender, residence, occupation, votes, rank]\nTable club = [*, club_id, club_name, region, start_year]\nTable coach = [*, coach_id, coach_name, gender, club_id, rank]\nTable player_coach = [*, player_id, coach_id, starting_year]\nTable match_result = [*, rank, club_id, gold, big_silver, small_silver, bronze, points]\nforeign_keys = [coach.Club_ID = club.Club_ID, player_coach.Coach_ID = coach.Coach_ID, player_coach.Player_ID = player.Player_ID, match_result.Club_ID = club.Club_ID]", "customers_card_transactions": "Table accounts = [*, account_id, customer_id, account_name, other_account_details]\nTable customers = [*, customer_id, customer_first_name, customer_last_name, customer_address, customer_phone, customer_email, other_customer_details]\nTable customers_cards = [*, card_id, customer_id, card_type_code, card_number, date_valid_from, date_valid_to, other_card_details]\nTable financial_transactions = [*, transaction_id, previous_transaction_id, account_id, card_id, transaction_type, transaction_date, transaction_amount, transaction_comment, other_transaction_details]\nforeign_keys = [Financial_Transactions.account_id = Accounts.account_id, Financial_Transactions.card_id = Customers_Cards.card_id]", "county_public_safety": "Table county_public_safety = [*, county_id, name, population, police_officers, residents_per_officer, case_burden, crime_rate, police_force, location]\nTable city = [*, city_id, county_id, name, white, black, amerindian, asian, multiracial, hispanic]\nforeign_keys = [city.County_ID = county_public_safety.County_ID]", "performance_attendance": "Table member = [*, member_id, name, nationality, role]\nTable performance = [*, performance_id, date, host, location, attendance]\nTable member_attendance = [*, member_id, performance_id, num_of_pieces]\nforeign_keys = [member_attendance.Performance_ID = performance.Performance_ID, member_attendance.Member_ID = member.Member_ID]", "club_1": "Table student = [*, stuid, lname, fname, age, sex, major, advisor, city_code]\nTable club = [*, clubid, clubname, clubdesc, clublocation]\nTable member_of_club = [*, stuid, clubid, position]\nforeign_keys = [Member_of_club.ClubID = Club.ClubID, Member_of_club.StuID = Student.StuID]", "singer": "Table singer = [*, singer_id, name, birth_year, net_worth_millions, citizenship]\nTable song = [*, song_id, title, singer_id, sales, highest_position]\nforeign_keys = [song.Singer_ID = singer.Singer_ID]", "culture_company": "Table book_club = [*, book_club_id, year, author_or_editor, book_title, publisher, category, result]\nTable movie = [*, movie_id, title, year, director, budget_million, gross_worldwide]\nTable culture_company = [*, company_name, type, incorporated_in, group_equity_shareholding, book_club_id, movie_id]\nforeign_keys = [culture_company.movie_id = movie.movie_id, culture_company.book_club_id = book_club.book_club_id]", "cre_Doc_Template_Mgt": "Table ref_template_types = [*, template_type_code, template_type_description]\nTable templates = [*, template_id, version_number, template_type_code, date_effective_from, date_effective_to, template_details]\nTable documents = [*, document_id, template_id, document_name, document_description, other_details]\nTable paragraphs = [*, paragraph_id, document_id, paragraph_text, other_details]\nforeign_keys = [Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code, Documents.Template_ID = Templates.Template_ID, Paragraphs.Document_ID = Documents.Document_ID]", "musical": "Table musical = [*, musical_id, name, year, award, category, nominee, result]\nTable actor = [*, actor_id, name, musical_id, character, duration, age]\nforeign_keys = [actor.Musical_ID = actor.Actor_ID]", "world_1": "Table city = [*, id, name, countrycode, district, population]\nTable sqlite_sequence = [*, name, seq]\nTable country = [*, code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2]\nTable countrylanguage = [*, countrycode, language, isofficial, percentage]\nforeign_keys = [city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code]", "device": "Table device = [*, device_id, device, carrier, package_version, applications, software_platform]\nTable shop = [*, shop_id, shop_name, location, open_date, open_year]\nTable stock = [*, shop_id, device_id, quantity]\nforeign_keys = [stock.Device_ID = device.Device_ID, stock.Shop_ID = shop.Shop_ID]", "tracking_grants_for_research": "Table document_types = [*, document_type_code, document_description]\nTable documents = [*, document_id, document_type_code, grant_id, sent_date, response_received_date, other_details]\nTable grants = [*, grant_id, organisation_id, grant_amount, grant_start_date, grant_end_date, other_details]\nTable organisation_types = [*, organisation_type, organisation_type_description]\nTable organisations = [*, organisation_id, organisation_type, organisation_details]\nTable project_outcomes = [*, project_id, outcome_code, outcome_details]\nTable project_staff = [*, staff_id, project_id, role_code, date_from, date_to, other_details]\nTable projects = [*, project_id, organisation_id, project_details]\nTable research_outcomes = [*, outcome_code, outcome_description]\nTable research_staff = [*, staff_id, employer_organisation_id, staff_details]\nTable staff_roles = [*, role_code, role_description]\nTable tasks = [*, task_id, project_id, task_details, eg agree objectives]\nforeign_keys = [Documents.grant_id = Grants.grant_id, Documents.document_type_code = Document_Types.document_type_code, Grants.organisation_id = Organisations.organisation_id, Organisations.organisation_type = Organisation_Types.organisation_type, Project_Outcomes.outcome_code = Research_Outcomes.outcome_code, Project_Outcomes.project_id = Projects.project_id, Project_Staff.role_code = Staff_Roles.role_code, Project_Staff.project_id = Projects.project_id, Projects.organisation_id = Organisations.organisation_id, Research_Staff.employer_organisation_id = Organisations.organisation_id, Tasks.project_id = Projects.project_id]", "employee_hire_evaluation": "Table employee = [*, employee_id, name, age, city]\nTable shop = [*, shop_id, name, location, district, number_products, manager_name]\nTable hiring = [*, shop_id, employee_id, start_from, is_full_time]\nTable evaluation = [*, employee_id, year_awarded, bonus]\nforeign_keys = [hiring.Employee_ID = employee.Employee_ID, hiring.Shop_ID = shop.Shop_ID, evaluation.Employee_ID = employee.Employee_ID]", "movie_1": "Table movie = [*, mid, title, year, director]\nTable reviewer = [*, rid, name]\nTable rating = [*, rid, mid, stars, ratingdate]\nforeign_keys = [Rating.rID = Reviewer.rID, Rating.mID = Movie.mID]", "network_1": "Table highschooler = [*, id, name, grade]\nTable friend = [*, student_id, friend_id]\nTable likes = [*, student_id, liked_id]\nforeign_keys = [Friend.friend_id = Highschooler.ID, Friend.student_id = Highschooler.ID, Likes.student_id = Highschooler.ID, Likes.liked_id = Highschooler.ID]", "poker_player": "Table poker_player = [*, poker_player_id, people_id, final_table_made, best_finish, money_rank, earnings]\nTable people = [*, people_id, nationality, name, birth_date, height]\nforeign_keys = [poker_player.People_ID = people.People_ID]", "program_share": "Table program = [*, program_id, name, origin, launch, owner]\nTable channel = [*, channel_id, name, owner, share_in_percent, rating_in_percent]\nTable broadcast = [*, channel_id, program_id, time_of_day]\nTable broadcast_share = [*, channel_id, program_id, date, share_in_percent]\nforeign_keys = [broadcast.Program_ID = program.Program_ID, broadcast.Channel_ID = channel.Channel_ID, broadcast_share.Program_ID = program.Program_ID, broadcast_share.Channel_ID = channel.Channel_ID]", "aircraft": "Table pilot = [*, pilot_id, name, age]\nTable aircraft = [*, aircraft_id, aircraft, description, max_gross_weight, total_disk_area, max_disk_loading]\nTable match = [*, round, location, country, date, fastest_qualifying, winning_pilot, winning_aircraft]\nTable airport = [*, airport_id, airport_name, total_passengers, %_change_2007, international_passengers, domestic_passengers, transit_passengers, aircraft_movements, freight_metric_tonnes]\nTable airport_aircraft = [*, id, airport_id, aircraft_id]\nforeign_keys = [match.Winning_Pilot = pilot.Pilot_Id, match.Winning_Aircraft = aircraft.Aircraft_ID, airport_aircraft.Aircraft_ID = aircraft.Aircraft_ID, airport_aircraft.Airport_ID = airport.Airport_ID]", "restaurant_1": "Table student = [*, stuid, lname, fname, age, sex, major, advisor, city_code]\nTable restaurant = [*, resid, resname, address, rating]\nTable type_of_restaurant = [*, resid, restypeid]\nTable restaurant_type = [*, restypeid, restypename, restypedescription]\nTable visits_restaurant = [*, stuid, resid, time, spent]\nforeign_keys = [Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID, Type_Of_Restaurant.ResID = Restaurant.ResID, Visits_Restaurant.ResID = Restaurant.ResID, Visits_Restaurant.StuID = Student.StuID]", "customers_and_invoices": "Table customers = [*, customer_id, customer_first_name, customer_middle_initial, customer_last_name, gender, email_address, login_name, login_password, phone_number, town_city, state_county_province, country]\nTable orders = [*, order_id, customer_id, date_order_placed, order_details]\nTable invoices = [*, invoice_number, order_id, invoice_date]\nTable accounts = [*, account_id, customer_id, date_account_opened, account_name, other_account_details]\nTable product_categories = [*, production_type_code, product_type_description, vat_rating]\nTable products = [*, product_id, parent_product_id, production_type_code, unit_price, product_name, product_color, product_size]\nTable financial_transactions = [*, transaction_id, account_id, invoice_number, transaction_type, transaction_date, transaction_amount, transaction_comment, other_transaction_details]\nTable order_items = [*, order_item_id, order_id, product_id, product_quantity, other_order_item_details]\nTable invoice_line_items = [*, order_item_id, invoice_number, product_id, product_title, product_quantity, product_price, derived_product_cost, derived_vat_payable, derived_total_cost]\nforeign_keys = [Orders.customer_id = Customers.customer_id, Invoices.order_id = Orders.order_id, Accounts.customer_id = Customers.customer_id, Products.production_type_code = Product_Categories.production_type_code, Financial_Transactions.account_id = Accounts.account_id, Financial_Transactions.invoice_number = Invoices.invoice_number, Order_Items.order_id = Orders.order_id, Order_Items.product_id = Products.product_id, Invoice_Line_Items.product_id = Products.product_id, Invoice_Line_Items.invoice_number = Invoices.invoice_number, Invoice_Line_Items.order_item_id = Order_Items.order_item_id]", "insurance_and_eClaims": "Table customers = [*, customer_id, customer_details]\nTable staff = [*, staff_id, staff_details]\nTable policies = [*, policy_id, customer_id, policy_type_code, start_date, end_date]\nTable claim_headers = [*, claim_header_id, claim_status_code, claim_type_code, policy_id, date_of_claim, date_of_settlement, amount_claimed, amount_piad]\nTable claims_documents = [*, claim_id, document_type_code, created_by_staff_id, created_date]\nTable claims_processing_stages = [*, claim_stage_id, next_claim_stage_id, claim_status_name, claim_status_description]\nTable claims_processing = [*, claim_processing_id, claim_id, claim_outcome_code, claim_stage_id, staff_id]\nforeign_keys = [Policies.Customer_ID = Customers.Customer_ID, Claim_Headers.Policy_ID = Policies.Policy_ID, Claims_Documents.Created_by_Staff_ID = Staff.Staff_ID, Claims_Documents.Claim_ID = Claim_Headers.Claim_Header_ID, Claims_Processing.Staff_ID = Staff.Staff_ID, Claims_Processing.Claim_ID = Claim_Headers.Claim_Header_ID]", "college_1": "Table class = [*, class_code, crs_code, class_section, class_time, class_room, prof_num]\nTable course = [*, crs_code, dept_code, crs_description, crs_credit]\nTable department = [*, dept_code, dept_name, school_code, emp_num, dept_address, dept_extension]\nTable employee = [*, emp_num, emp_lname, emp_fname, emp_initial, emp_jobcode, emp_hiredate, emp_dob]\nTable enroll = [*, class_code, stu_num, enroll_grade]\nTable professor = [*, emp_num, dept_code, prof_office, prof_extension, prof_high_degree]\nTable student = [*, stu_num, stu_lname, stu_fname, stu_init, stu_dob, stu_hrs, stu_class, stu_gpa, stu_transfer, dept_code, stu_phone, prof_num]\nforeign_keys = [CLASS.PROF_NUM = EMPLOYEE.EMP_NUM, CLASS.CRS_CODE = COURSE.CRS_CODE, COURSE.DEPT_CODE = DEPARTMENT.DEPT_CODE, DEPARTMENT.EMP_NUM = EMPLOYEE.EMP_NUM, ENROLL.STU_NUM = STUDENT.STU_NUM, ENROLL.CLASS_CODE = CLASS.CLASS_CODE, PROFESSOR.DEPT_CODE = DEPARTMENT.DEPT_CODE, PROFESSOR.EMP_NUM = EMPLOYEE.EMP_NUM, STUDENT.DEPT_CODE = DEPARTMENT.DEPT_CODE]", "local_govt_mdm": "Table customer_master_index = [*, master_customer_id, cmi_details]\nTable cmi_cross_references = [*, cmi_cross_ref_id, master_customer_id, source_system_code]\nTable council_tax = [*, council_tax_id, cmi_cross_ref_id]\nTable business_rates = [*, business_rates_id, cmi_cross_ref_id]\nTable benefits_overpayments = [*, council_tax_id, cmi_cross_ref_id]\nTable parking_fines = [*, council_tax_id, cmi_cross_ref_id]\nTable rent_arrears = [*, council_tax_id, cmi_cross_ref_id]\nTable electoral_register = [*, electoral_register_id, cmi_cross_ref_id]\nforeign_keys = [CMI_Cross_References.master_customer_id = Customer_Master_Index.master_customer_id, Council_Tax.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id, Business_Rates.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id, Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id, Parking_Fines.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id, Rent_Arrears.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id, Electoral_Register.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id]", "book_2": "Table publication = [*, publication_id, book_id, publisher, publication_date, price]\nTable book = [*, book_id, title, issues, writer]\nforeign_keys = [publication.Book_ID = book.Book_ID]", "hr_1": "Table regions = [*, region_id, region_name]\nTable countries = [*, country_id, country_name, region_id]\nTable departments = [*, department_id, department_name, manager_id, location_id]\nTable jobs = [*, job_id, job_title, min_salary, max_salary]\nTable employees = [*, employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, commission_pct, manager_id, department_id]\nTable job_history = [*, employee_id, start_date, end_date, job_id, department_id]\nTable locations = [*, location_id, street_address, postal_code, city, state_province, country_id]\nforeign_keys = [countries.REGION_ID = regions.REGION_ID, employees.JOB_ID = jobs.JOB_ID, employees.DEPARTMENT_ID = departments.DEPARTMENT_ID, job_history.JOB_ID = jobs.JOB_ID, job_history.DEPARTMENT_ID = departments.DEPARTMENT_ID, job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID, locations.COUNTRY_ID = countries.COUNTRY_ID]", "soccer_1": "Table player_attributes = [*, id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes]\nTable sqlite_sequence = [*, name, seq]\nTable player = [*, id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight]\nTable league = [*, id, country_id, name]\nTable country = [*, id, name]\nTable team = [*, id, team_api_id, team_fifa_api_id, team_long_name, team_short_name]\nTable team_attributes = [*, id, team_fifa_api_id, team_api_id, date, buildupplayspeed, buildupplayspeedclass, buildupplaydribbling, buildupplaydribblingclass, buildupplaypassing, buildupplaypassingclass, buildupplaypositioningclass, chancecreationpassing, chancecreationpassingclass, chancecreationcrossing, chancecreationcrossingclass, chancecreationshooting, chancecreationshootingclass, chancecreationpositioningclass, defencepressure, defencepressureclass, defenceaggression, defenceaggressionclass, defenceteamwidth, defenceteamwidthclass, defencedefenderlineclass]\nforeign_keys = [Player_Attributes.player_api_id = Player.player_api_id, Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id, League.country_id = Country.id, Team_Attributes.team_api_id = Team.team_api_id, Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id]", "sakila_1": "Table actor = [*, actor_id, first_name, last_name, last_update]\nTable address = [*, address_id, address, address2, district, city_id, postal_code, phone, last_update]\nTable category = [*, category_id, name, last_update]\nTable city = [*, city_id, city, country_id, last_update]\nTable country = [*, country_id, country, last_update]\nTable customer = [*, customer_id, store_id, first_name, last_name, email, address_id, active, create_date, last_update]\nTable film = [*, film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, special_features, last_update]\nTable film_actor = [*, actor_id, film_id, last_update]\nTable film_category = [*, film_id, category_id, last_update]\nTable film_text = [*, film_id, title, description]\nTable inventory = [*, inventory_id, film_id, store_id, last_update]\nTable language = [*, language_id, name, last_update]\nTable payment = [*, payment_id, customer_id, staff_id, rental_id, amount, payment_date, last_update]\nTable rental = [*, rental_id, rental_date, inventory_id, customer_id, return_date, staff_id, last_update]\nTable staff = [*, staff_id, first_name, last_name, address_id, picture, email, store_id, active, username, password, last_update]\nTable store = [*, store_id, manager_staff_id, address_id, last_update]\nforeign_keys = [address.city_id = city.city_id, city.country_id = country.country_id, customer.store_id = store.store_id, customer.address_id = address.address_id, film.original_language_id = language.language_id, film.language_id = language.language_id, film_actor.film_id = film.film_id, film_actor.actor_id = actor.actor_id, film_category.category_id = category.category_id, film_category.film_id = film.film_id, inventory.film_id = film.film_id, inventory.store_id = store.store_id, payment.staff_id = staff.staff_id, payment.customer_id = customer.customer_id, payment.rental_id = rental.rental_id, rental.customer_id = customer.customer_id, rental.inventory_id = inventory.inventory_id, rental.staff_id = staff.staff_id, staff.address_id = address.address_id, store.address_id = address.address_id, store.manager_staff_id = staff.staff_id]", "real_estate_properties": "Table ref_feature_types = [*, feature_type_code, feature_type_name]\nTable ref_property_types = [*, property_type_code, property_type_description]\nTable other_available_features = [*, feature_id, feature_type_code, feature_name, feature_description]\nTable properties = [*, property_id, property_type_code, date_on_market, date_sold, property_name, property_address, room_count, vendor_requested_price, buyer_offered_price, agreed_selling_price, apt_feature_1, apt_feature_2, apt_feature_3, fld_feature_1, fld_feature_2, fld_feature_3, hse_feature_1, hse_feature_2, hse_feature_3, oth_feature_1, oth_feature_2, oth_feature_3, shp_feature_1, shp_feature_2, shp_feature_3, other_property_details]\nTable other_property_features = [*, property_id, feature_id, property_feature_description]\nforeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code, Properties.property_type_code = Ref_Property_Types.property_type_code, Other_Property_Features.property_id = Properties.property_id, Other_Property_Features.feature_id = Other_Available_Features.feature_id]", "college_3": "Table student = [*, stuid, lname, fname, age, sex, major, advisor, city_code]\nTable faculty = [*, facid, lname, fname, rank, sex, phone, room, building]\nTable department = [*, dno, division, dname, room, building, dphone]\nTable member_of = [*, facid, dno, appt_type]\nTable course = [*, cid, cname, credits, instructor, days, hours, dno]\nTable minor_in = [*, stuid, dno]\nTable enrolled_in = [*, stuid, cid, grade]\nTable gradeconversion = [*, lettergrade, gradepoint]\nforeign_keys = [Member_of.DNO = Department.DNO, Member_of.FacID = Faculty.FacID, Course.DNO = Department.DNO, Course.Instructor = Faculty.FacID, Minor_in.DNO = Department.DNO, Minor_in.StuID = Student.StuID, Enrolled_in.Grade = Gradeconversion.lettergrade, Enrolled_in.CID = Course.CID, Enrolled_in.StuID = Student.StuID]", "course_teach": "Table course = [*, course_id, staring_date, course]\nTable teacher = [*, teacher_id, name, age, hometown]\nTable course_arrange = [*, course_id, teacher_id, grade]\nforeign_keys = [course_arrange.Teacher_ID = teacher.Teacher_ID, course_arrange.Course_ID = course.Course_ID]", "roller_coaster": "Table roller_coaster = [*, roller_coaster_id, name, park, country_id, length, height, speed, opened, status]\nTable country = [*, country_id, name, population, area, languages]\nforeign_keys = [roller_coaster.Country_ID = country.Country_ID]", "customer_deliveries": "Table products = [*, product_id, product_name, product_price, product_description]\nTable addresses = [*, address_id, address_details, city, zip_postcode, state_province_county, country]\nTable customers = [*, customer_id, payment_method, customer_name, customer_phone, customer_email, date_became_customer]\nTable regular_orders = [*, regular_order_id, distributer_id]\nTable regular_order_products = [*, regular_order_id, product_id]\nTable actual_orders = [*, actual_order_id, order_status_code, regular_order_id, actual_order_date]\nTable actual_order_products = [*, actual_order_id, product_id]\nTable customer_addresses = [*, customer_id, address_id, date_from, address_type, date_to]\nTable delivery_routes = [*, route_id, route_name, other_route_details]\nTable delivery_route_locations = [*, location_code, route_id, location_address_id, location_name]\nTable trucks = [*, truck_id, truck_licence_number, truck_details]\nTable employees = [*, employee_id, employee_address_id, employee_name, employee_phone]\nTable order_deliveries = [*, location_code, actual_order_id, delivery_status_code, driver_employee_id, truck_id, delivery_date]\nforeign_keys = [Regular_Orders.distributer_id = Customers.customer_id, Regular_Order_Products.regular_order_id = Regular_Orders.regular_order_id, Regular_Order_Products.product_id = Products.product_id, Actual_Orders.regular_order_id = Regular_Orders.regular_order_id, Actual_Order_Products.actual_order_id = Actual_Orders.actual_order_id, Actual_Order_Products.product_id = Products.product_id, Customer_Addresses.address_id = Addresses.address_id, Customer_Addresses.customer_id = Customers.customer_id, Delivery_Route_Locations.route_id = Delivery_Routes.route_id, Delivery_Route_Locations.location_address_id = Addresses.address_id, Employees.employee_address_id = Addresses.address_id, Order_Deliveries.driver_employee_id = Employees.employee_id, Order_Deliveries.location_code = Delivery_Route_Locations.location_code, Order_Deliveries.actual_order_id = Actual_Orders.actual_order_id, Order_Deliveries.truck_id = Trucks.truck_id]", "game_injury": "Table stadium = [*, id, name, home_games, average_attendance, total_attendance, capacity_percentage]\nTable game = [*, stadium_id, id, season, date, home_team, away_team, score, competition]\nTable injury_accident = [*, game_id, id, player, injury, number_of_matches, source]\nforeign_keys = [game.stadium_id = stadium.id, injury_accident.game_id = game.id]", "school_finance": "Table school = [*, school_id, school_name, location, mascot, enrollment, ihsaa_class, ihsaa_football_class, county]\nTable budget = [*, school_id, year, budgeted, total_budget_percent_budgeted, invested, total_budget_percent_invested, budget_invested_percent]\nTable endowment = [*, endowment_id, school_id, donator_name, amount]\nforeign_keys = [budget.School_id = School.School_id, endowment.School_id = School.School_id]", "scholar": "Table venue = [*, venueid, venuename]\nTable author = [*, authorid, authorname]\nTable dataset = [*, datasetid, datasetname]\nTable journal = [*, journalid, journalname]\nTable keyphrase = [*, keyphraseid, keyphrasename]\nTable paper = [*, paperid, title, venueid, year, numciting, numcitedby, journalid]\nTable cite = [*, citingpaperid, citedpaperid]\nTable paperdataset = [*, paperid, datasetid]\nTable paperkeyphrase = [*, paperid, keyphraseid]\nTable writes = [*, paperid, authorid]\nforeign_keys = [paper.venueId = venue.venueId, paper.journalId = journal.journalId, cite.citingPaperId = paper.paperId, cite.citedPaperId = paper.paperId, paperKeyphrase.keyphraseId = keyphrase.keyphraseId, paperKeyphrase.paperId = paper.paperId, writes.authorId = author.authorId, writes.paperId = paper.paperId]", "voter_1": "Table area_code_state = [*, area_code, state]\nTable contestants = [*, contestant_number, contestant_name]\nTable votes = [*, vote_id, phone_number, state, contestant_number, created]\nforeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number, VOTES.state = AREA_CODE_STATE.state]", "match_season": "Table country = [*, country_id, country_name, capital, official_native_language]\nTable team = [*, team_id, name]\nTable match_season = [*, season, player, position, country, team, draft_pick_number, draft_class, college]\nTable player = [*, player_id, player, years_played, total_wl, singles_wl, doubles_wl, team]\nforeign_keys = [match_season.Team = team.Team_id, match_season.Country = country.Country_id, player.Team = team.Team_id]", "small_bank_1": "Table accounts = [*, custid, name]\nTable savings = [*, custid, balance]\nTable checking = [*, custid, balance]\nforeign_keys = [SAVINGS.custid = ACCOUNTS.custid, CHECKING.custid = ACCOUNTS.custid]", "wta_1": "Table players = [*, player_id, first_name, last_name, hand, birth_date, country_code]\nTable matches = [*, best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year]\nTable rankings = [*, ranking_date, ranking, player_id, ranking_points, tours]\nforeign_keys = [matches.winner_id = players.player_id, matches.loser_id = players.player_id, rankings.player_id = players.player_id]", "yelp": "Table business = [*, bid, business_id, name, full_address, city, latitude, longitude, review_count, is_open, rating, state]\nTable category = [*, id, business_id, category_name]\nTable user = [*, uid, user_id, name]\nTable checkin = [*, cid, business_id, count, day]\nTable neighbourhood = [*, id, business_id, neighbourhood_name]\nTable review = [*, rid, business_id, user_id, rating, text, year, month]\nTable tip = [*, tip_id, business_id, text, user_id, likes, year, month]\nforeign_keys = [category.business_id = business.business_id, checkin.business_id = business.business_id, neighbourhood.business_id = business.business_id, review.user_id = user.user_id, review.business_id = business.business_id, tip.user_id = user.user_id, tip.business_id = business.business_id]", "student_1": "Table list = [*, lastname, firstname, grade, classroom]\nTable teachers = [*, lastname, firstname, classroom]\nforeign_keys = []", "manufacturer": "Table manufacturer = [*, manufacturer_id, open_year, name, num_of_factories, num_of_shops]\nTable furniture = [*, furniture_id, name, num_of_component, market_rate]\nTable furniture_manufacte = [*, manufacturer_id, furniture_id, price_in_dollar]\nforeign_keys = [furniture_manufacte.Furniture_ID = furniture.Furniture_ID, furniture_manufacte.Manufacturer_ID = manufacturer.Manufacturer_ID]", "store_1": "Table artists = [*, id, name]\nTable sqlite_sequence = [*, name, seq]\nTable albums = [*, id, title, artist_id]\nTable employees = [*, id, last_name, first_name, title, reports_to, birth_date, hire_date, address, city, state, country, postal_code, phone, fax, email]\nTable customers = [*, id, first_name, last_name, company, address, city, state, country, postal_code, phone, fax, email, support_rep_id]\nTable genres = [*, id, name]\nTable invoices = [*, id, customer_id, invoice_date, billing_address, billing_city, billing_state, billing_country, billing_postal_code, total]\nTable media_types = [*, id, name]\nTable tracks = [*, id, name, album_id, media_type_id, genre_id, composer, milliseconds, bytes, unit_price]\nTable invoice_lines = [*, id, invoice_id, track_id, unit_price, quantity]\nTable playlists = [*, id, name]\nTable playlist_tracks = [*, playlist_id, track_id]\nforeign_keys = [albums.artist_id = artists.id, employees.reports_to = employees.id, customers.support_rep_id = employees.id, invoices.customer_id = customers.id, tracks.media_type_id = media_types.id, tracks.genre_id = genres.id, tracks.album_id = albums.id, invoice_lines.track_id = tracks.id, invoice_lines.invoice_id = invoices.id, playlist_tracks.track_id = tracks.id, playlist_tracks.playlist_id = playlists.id]", "train_station": "Table station = [*, station_id, name, annual_entry_exit, annual_interchanges, total_passengers, location, main_services, number_of_platforms]\nTable train = [*, train_id, name, time, service]\nTable train_station = [*, train_id, station_id]\nforeign_keys = [train_station.Station_ID = station.Station_ID, train_station.Train_ID = train.Train_ID]", "document_management": "Table roles = [*, role_code, role_description]\nTable users = [*, user_id, role_code, user_name, user_login, password]\nTable document_structures = [*, document_structure_code, parent_document_structure_code, document_structure_description]\nTable functional_areas = [*, functional_area_code, parent_functional_area_code, functional_area_description]\nTable images = [*, image_id, image_alt_text, image_name, image_url]\nTable documents = [*, document_code, document_structure_code, document_type_code, access_count, document_name]\nTable document_functional_areas = [*, document_code, functional_area_code]\nTable document_sections = [*, section_id, document_code, section_sequence, section_code, section_title]\nTable document_sections_images = [*, section_id, image_id]\nforeign_keys = [Users.role_code = Roles.role_code, Documents.document_structure_code = Document_Structures.document_structure_code, Document_Functional_Areas.functional_area_code = Functional_Areas.functional_area_code, Document_Functional_Areas.document_code = Documents.document_code, Document_Sections.document_code = Documents.document_code, Document_Sections_Images.image_id = Images.image_id, Document_Sections_Images.section_id = Document_Sections.section_id]", "formula_1": "Table circuits = [*, circuitid, circuitref, name, location, country, lat, lng, alt, url]\nTable races = [*, raceid, year, round, circuitid, name, date, time, url]\nTable drivers = [*, driverid, driverref, number, code, forename, surname, dob, nationality, url]\nTable status = [*, statusid, status]\nTable seasons = [*, year, url]\nTable constructors = [*, constructorid, constructorref, name, nationality, url]\nTable constructorstandings = [*, constructorstandingsid, raceid, constructorid, points, position, positiontext, wins]\nTable results = [*, resultid, raceid, driverid, constructorid, number, grid, position, positiontext, positionorder, points, laps, time, milliseconds, fastestlap, rank, fastestlaptime, fastestlapspeed, statusid]\nTable driverstandings = [*, driverstandingsid, raceid, driverid, points, position, positiontext, wins]\nTable constructorresults = [*, constructorresultsid, raceid, constructorid, points, status]\nTable qualifying = [*, qualifyid, raceid, driverid, constructorid, number, position, q1, q2, q3]\nTable pitstops = [*, raceid, driverid, stop, lap, time, duration, milliseconds]\nTable laptimes = [*, raceid, driverid, lap, position, time, milliseconds]\nforeign_keys = [races.circuitId = circuits.circuitId, constructorStandings.raceId = races.raceId, constructorStandings.constructorId = constructors.constructorId, results.driverId = drivers.driverId, results.raceId = races.raceId, results.constructorId = constructors.constructorId, driverStandings.driverId = drivers.driverId, driverStandings.raceId = races.raceId, constructorResults.raceId = races.raceId, constructorResults.constructorId = constructors.constructorId, qualifying.driverId = drivers.driverId, qualifying.raceId = races.raceId, qualifying.constructorId = constructors.constructorId, pitStops.driverId = drivers.driverId, pitStops.raceId = races.raceId, lapTimes.driverId = drivers.driverId, lapTimes.raceId = races.raceId]", "game_1": "Table student = [*, stuid, lname, fname, age, sex, major, advisor, city_code]\nTable video_games = [*, gameid, gname, gtype]\nTable plays_games = [*, stuid, gameid, hours_played]\nTable sportsinfo = [*, stuid, sportname, hoursperweek, gamesplayed, onscholarship]\nforeign_keys = [Plays_Games.StuID = Student.StuID, Plays_Games.GameID = Video_Games.GameID, SportsInfo.StuID = Student.StuID]", "loan_1": "Table bank = [*, branch_id, bname, no_of_customers, city, state]\nTable customer = [*, cust_id, cust_name, acc_type, acc_bal, no_of_loans, credit_score, branch_id, state]\nTable loan = [*, loan_id, loan_type, cust_id, branch_id, amount]\nforeign_keys = [customer.branch_ID = bank.branch_ID, loan.branch_ID = bank.branch_ID]", "bike_1": "Table station = [*, id, name, lat, long, dock_count, city, installation_date]\nTable status = [*, station_id, bikes_available, docks_available, time]\nTable trip = [*, id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code]\nTable weather = [*, date, max_temperature_f, mean_temperature_f, min_temperature_f, max_dew_point_f, mean_dew_point_f, min_dew_point_f, max_humidity, mean_humidity, min_humidity, max_sea_level_pressure_inches, mean_sea_level_pressure_inches, min_sea_level_pressure_inches, max_visibility_miles, mean_visibility_miles, min_visibility_miles, max_wind_speed_mph, mean_wind_speed_mph, max_gust_speed_mph, precipitation_inches, cloud_cover, events, wind_dir_degrees, zip_code]\nforeign_keys = [status.station_id = station.id]", "entrepreneur": "Table entrepreneur = [*, entrepreneur_id, people_id, company, money_requested, investor]\nTable people = [*, people_id, name, height, weight, date_of_birth]\nforeign_keys = [entrepreneur.People_ID = people.People_ID]", "orchestra": "Table conductor = [*, conductor_id, name, age, nationality, year_of_work]\nTable orchestra = [*, orchestra_id, orchestra, conductor_id, record_company, year_of_founded, major_record_format]\nTable performance = [*, performance_id, orchestra_id, type, date, official_ratings_(millions), weekly_rank, share]\nTable show = [*, show_id, performance_id, if_first_show, result, attendance]\nforeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID, performance.Orchestra_ID = orchestra.Orchestra_ID, show.Performance_ID = performance.Performance_ID]", "cre_Drama_Workshop_Groups": "Table ref_payment_methods = [*, payment_method_code, payment_method_description]\nTable ref_service_types = [*, service_type_code, parent_service_type_code, service_type_description]\nTable addresses = [*, address_id, line_1, line_2, city_town, state_county, other_details]\nTable products = [*, product_id, product_name, product_price, product_description, other_product_service_details]\nTable marketing_regions = [*, marketing_region_code, marketing_region_name, marketing_region_descriptrion, other_details]\nTable clients = [*, client_id, address_id, customer_email_address, customer_name, customer_phone, other_details]\nTable drama_workshop_groups = [*, workshop_group_id, address_id, currency_code, marketing_region_code, store_name, store_phone, store_email_address, other_details]\nTable performers = [*, performer_id, address_id, customer_name, customer_phone, customer_email_address, other_details]\nTable customers = [*, customer_id, address_id, customer_name, customer_phone, customer_email_address, other_details]\nTable stores = [*, store_id, address_id, marketing_region_code, store_name, store_phone, store_email_address, other_details]\nTable bookings = [*, booking_id, customer_id, workshop_group_id, status_code, store_id, order_date, planned_delivery_date, actual_delivery_date, other_order_details]\nTable performers_in_bookings = [*, order_id, performer_id]\nTable customer_orders = [*, order_id, customer_id, store_id, order_date, planned_delivery_date, actual_delivery_date, other_order_details]\nTable order_items = [*, order_item_id, order_id, product_id, order_quantity, other_item_details]\nTable invoices = [*, invoice_id, order_id, payment_method_code, product_id, order_quantity, other_item_details, order_item_id]\nTable services = [*, service_id, service_type_code, workshop_group_id, product_description, product_name, product_price, other_product_service_details]\nTable bookings_services = [*, order_id, product_id]\nTable invoice_items = [*, invoice_item_id, invoice_id, order_id, order_item_id, product_id, order_quantity, other_item_details]\nforeign_keys = [Clients.Address_ID = Addresses.Address_ID, Drama_Workshop_Groups.Address_ID = Addresses.Address_ID, Performers.Address_ID = Addresses.Address_ID, Customers.Address_ID = Addresses.Address_ID, Stores.Marketing_Region_Code = Marketing_Regions.Marketing_Region_Code, Stores.Address_ID = Addresses.Address_ID, Bookings.Workshop_Group_ID = Drama_Workshop_Groups.Workshop_Group_ID, Bookings.Customer_ID = Clients.Client_ID, Performers_in_Bookings.Order_ID = Bookings.Booking_ID, Performers_in_Bookings.Performer_ID = Performers.Performer_ID, Customer_Orders.Store_ID = Stores.Store_ID, Customer_Orders.Customer_ID = Customers.Customer_ID, Order_Items.Product_ID = Products.Product_ID, Order_Items.Order_ID = Customer_Orders.Order_ID, Invoices.payment_method_code = Ref_Payment_Methods.payment_method_code, Invoices.Order_ID = Bookings.Booking_ID, Invoices.Order_ID = Customer_Orders.Order_ID, Services.Service_Type_Code = Ref_Service_Types.Service_Type_Code, Services.Workshop_Group_ID = Drama_Workshop_Groups.Workshop_Group_ID, Bookings_Services.Product_ID = Services.Service_ID, Bookings_Services.Order_ID = Bookings.Booking_ID, Invoice_Items.Order_ID = Bookings_Services.Order_ID, Invoice_Items.Product_ID = Bookings_Services.Product_ID, Invoice_Items.Invoice_ID = Invoices.Invoice_ID, Invoice_Items.Order_Item_ID = Order_Items.Order_Item_ID]", "car_1": "Table continents = [*, contid, continent]\nTable countries = [*, countryid, countryname, continent]\nTable car_makers = [*, id, maker, fullname, country]\nTable model_list = [*, modelid, maker, model]\nTable car_names = [*, makeid, model, make]\nTable cars_data = [*, id, mpg, cylinders, edispl, horsepower, weight, accelerate, year]\nforeign_keys = [countries.Continent = continents.ContId, car_makers.Country = countries.CountryId, model_list.Maker = car_makers.Id, car_names.Model = model_list.Model, cars_data.Id = car_names.MakeId]", "geo": "Table state = [*, state_name, population, area, country_name, capital, density]\nTable city = [*, city_name, population, country_name, state_name]\nTable border_info = [*, state_name, border]\nTable highlow = [*, state_name, highest_elevation, lowest_point, highest_point, lowest_elevation]\nTable lake = [*, lake_name, area, country_name, state_name]\nTable mountain = [*, mountain_name, mountain_altitude, country_name, state_name]\nTable river = [*, river_name, length, country_name, traverse]\nforeign_keys = [city.state_name = state.state_name, border_info.border = state.state_name, border_info.state_name = state.state_name, highlow.state_name = state.state_name, mountain.state_name = state.state_name, river.traverse = state.state_name]", "behavior_monitoring": "Table ref_address_types = [*, address_type_code, address_type_description]\nTable ref_detention_type = [*, detention_type_code, detention_type_description]\nTable ref_incident_type = [*, incident_type_code, incident_type_description]\nTable addresses = [*, address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details]\nTable students = [*, student_id, address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, date_first_rental, date_left_university, other_student_details]\nTable teachers = [*, teacher_id, address_id, first_name, middle_name, last_name, gender, cell_mobile_number, email_address, other_details]\nTable assessment_notes = [*, notes_id, student_id, teacher_id, date_of_notes, text_of_notes, other_details]\nTable behavior_incident = [*, incident_id, incident_type_code, student_id, date_incident_start, date_incident_end, incident_summary, recommendations, other_details]\nTable detention = [*, detention_id, detention_type_code, teacher_id, datetime_detention_start, datetime_detention_end, detention_summary, other_details]\nTable student_addresses = [*, student_id, address_id, date_address_from, date_address_to, monthly_rental, other_details]\nTable students_in_detention = [*, student_id, detention_id, incident_id]\nforeign_keys = [Students.address_id = Addresses.address_id, Teachers.address_id = Addresses.address_id, Assessment_Notes.teacher_id = Teachers.teacher_id, Assessment_Notes.student_id = Students.student_id, Behavior_Incident.student_id = Students.student_id, Behavior_Incident.incident_type_code = Ref_Incident_Type.incident_type_code, Detention.teacher_id = Teachers.teacher_id, Detention.detention_type_code = Ref_Detention_Type.detention_type_code, Student_Addresses.student_id = Students.student_id, Student_Addresses.address_id = Addresses.address_id, Students_in_Detention.student_id = Students.student_id, Students_in_Detention.detention_id = Detention.detention_id, Students_in_Detention.incident_id = Behavior_Incident.incident_id]", "cre_Doc_Tracking_DB": "Table ref_document_types = [*, document_type_code, document_type_name, document_type_description]\nTable ref_calendar = [*, calendar_date, day_number]\nTable ref_locations = [*, location_code, location_name, location_description]\nTable roles = [*, role_code, role_name, role_description]\nTable all_documents = [*, document_id, date_stored, document_type_code, document_name, document_description, other_details]\nTable employees = [*, employee_id, role_code, employee_name, gender_mfu, date_of_birth, other_details]\nTable document_locations = [*, document_id, location_code, date_in_location_from, date_in_locaton_to]\nTable documents_to_be_destroyed = [*, document_id, destruction_authorised_by_employee_id, destroyed_by_employee_id, planned_destruction_date, actual_destruction_date, other_details]\nforeign_keys = [All_Documents.Date_Stored = Ref_Calendar.Calendar_Date, All_Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code, Employees.Role_Code = Roles.Role_Code, Document_Locations.Document_ID = All_Documents.Document_ID, Document_Locations.Date_in_Locaton_To = Ref_Calendar.Calendar_Date, Document_Locations.Date_in_Location_From = Ref_Calendar.Calendar_Date, Document_Locations.Location_Code = Ref_Locations.Location_Code, Documents_to_be_Destroyed.Document_ID = All_Documents.Document_ID, Documents_to_be_Destroyed.Actual_Destruction_Date = Ref_Calendar.Calendar_Date, Documents_to_be_Destroyed.Planned_Destruction_Date = Ref_Calendar.Calendar_Date, Documents_to_be_Destroyed.Destruction_Authorised_by_Employee_ID = Employees.Employee_ID, Documents_to_be_Destroyed.Destroyed_by_Employee_ID = Employees.Employee_ID]", "university_basketball": "Table basketball_match = [*, team_id, school_id, team_name, acc_regular_season, acc_percent, acc_home, acc_road, all_games, all_games_percent, all_home, all_road, all_neutral]\nTable university = [*, school_id, school, location, founded, affiliation, enrollment, nickname, primary_conference]\nforeign_keys = [basketball_match.School_ID = university.School_ID]", "soccer_2": "Table college = [*, cname, state, enr]\nTable player = [*, pid, pname, ycard, hs]\nTable tryout = [*, pid, cname, ppos, decision]\nforeign_keys = [Tryout.cName = College.cName, Tryout.pID = Player.pID]", "activity_1": "Table activity = [*, actid, activity_name]\nTable participates_in = [*, stuid, actid]\nTable faculty_participates_in = [*, facid, actid]\nTable student = [*, stuid, lname, fname, age, sex, major, advisor, city_code]\nTable faculty = [*, facid, lname, fname, rank, sex, phone, room, building]\nforeign_keys = [Participates_in.actid = Activity.actid, Participates_in.stuid = Student.StuID, Faculty_Participates_in.actid = Activity.actid, Faculty_Participates_in.FacID = Faculty.FacID]", "cre_Theme_park": "Table ref_hotel_star_ratings = [*, star_rating_code, star_rating_description]\nTable locations = [*, location_id, location_name, address, other_details]\nTable ref_attraction_types = [*, attraction_type_code, attraction_type_description]\nTable visitors = [*, tourist_id, tourist_details]\nTable features = [*, feature_id, feature_details]\nTable hotels = [*, hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details]\nTable tourist_attractions = [*, tourist_attraction_id, attraction_type_code, location_id, how_to_get_there, name, description, opening_hours, other_details]\nTable street_markets = [*, market_id, market_details]\nTable shops = [*, shop_id, shop_details]\nTable museums = [*, museum_id, museum_details]\nTable royal_family = [*, royal_family_id, royal_family_details]\nTable theme_parks = [*, theme_park_id, theme_park_details]\nTable visits = [*, visit_id, tourist_attraction_id, tourist_id, visit_date, visit_details]\nTable photos = [*, photo_id, tourist_attraction_id, name, description, filename, other_details]\nTable staff = [*, staff_id, tourist_attraction_id, name, other_details]\nTable tourist_attraction_features = [*, tourist_attraction_id, feature_id]\nforeign_keys = [Hotels.star_rating_code = Ref_Hotel_Star_Ratings.star_rating_code, Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code, Tourist_Attractions.Location_ID = Locations.Location_ID, Street_Markets.Market_ID = Tourist_Attractions.Tourist_Attraction_ID, Shops.Shop_ID = Tourist_Attractions.Tourist_Attraction_ID, Museums.Museum_ID = Tourist_Attractions.Tourist_Attraction_ID, Royal_Family.Royal_Family_ID = Tourist_Attractions.Tourist_Attraction_ID, Theme_Parks.Theme_Park_ID = Tourist_Attractions.Tourist_Attraction_ID, Visits.Tourist_ID = Visitors.Tourist_ID, Visits.Tourist_Attraction_ID = Tourist_Attractions.Tourist_Attraction_ID, Photos.Tourist_Attraction_ID = Tourist_Attractions.Tourist_Attraction_ID, Staff.Tourist_Attraction_ID = Tourist_Attractions.Tourist_Attraction_ID, Tourist_Attraction_Features.Feature_ID = Features.Feature_ID, Tourist_Attraction_Features.Tourist_Attraction_ID = Tourist_Attractions.Tourist_Attraction_ID]", "twitter_1": "Table follows = [*, f1, f2]\nTable tweets = [*, id, uid, text, createdate]\nTable user_profiles = [*, uid, name, email, partitionid, followers]\nforeign_keys = [follows.f2 = user_profiles.uid, follows.f1 = user_profiles.uid, tweets.uid = user_profiles.uid]", "election_representative": "Table election = [*, election_id, representative_id, date, votes, vote_percent, seats, place]\nTable representative = [*, representative_id, name, state, party, lifespan]\nforeign_keys = [election.Representative_ID = representative.Representative_ID]", "voter_2": "Table student = [*, stuid, lname, fname, age, sex, major, advisor, city_code]\nTable voting_record = [*, stuid, registration_date, election_cycle, president_vote, vice_president_vote, secretary_vote, treasurer_vote, class_president_vote, class_senator_vote]\nforeign_keys = [Voting_record.Class_Senator_Vote = Student.StuID, Voting_record.Class_President_Vote = Student.StuID, Voting_record.Treasurer_Vote = Student.StuID, Voting_record.Secretary_Vote = Student.StuID, Voting_record.Vice_President_Vote = Student.StuID, Voting_record.President_Vote = Student.StuID, Voting_record.StuID = Student.StuID]", "wedding": "Table people = [*, people_id, name, country, is_male, age]\nTable church = [*, church_id, name, organized_by, open_date, continuation_of]\nTable wedding = [*, church_id, male_id, female_id, year]\nforeign_keys = [wedding.Female_ID = people.People_ID, wedding.Male_ID = people.People_ID, wedding.Church_ID = church.Church_ID]", "news_report": "Table event = [*, event_id, date, venue, name, event_attendance]\nTable journalist = [*, journalist_id, name, nationality, age, years_working]\nTable news_report = [*, journalist_id, event_id, work_type]\nforeign_keys = [news_report.Event_ID = event.Event_ID, news_report.journalist_ID = journalist.journalist_ID]", "wine_1": "Table grapes = [*, id, grape, color]\nTable appellations = [*, no, appelation, county, state, area, isava]\nTable wine = [*, no, grape, winery, appelation, state, name, year, price, score, cases, drink]\nforeign_keys = [wine.Appelation = appellations.Appelation, wine.Grape = grapes.Grape]", "customers_and_addresses": "Table addresses = [*, address_id, address_content, city, zip_postcode, state_province_county, country, other_address_details]\nTable products = [*, product_id, product_details]\nTable customers = [*, customer_id, payment_method, customer_name, date_became_customer, other_customer_details]\nTable customer_addresses = [*, customer_id, address_id, date_address_from, address_type, date_address_to]\nTable customer_contact_channels = [*, customer_id, channel_code, active_from_date, active_to_date, contact_number]\nTable customer_orders = [*, order_id, customer_id, order_status, order_date, order_details]\nTable order_items = [*, order_id, product_id, order_quantity]\nforeign_keys = [Customer_Addresses.customer_id = Customers.customer_id, Customer_Addresses.address_id = Addresses.address_id, Customer_Contact_Channels.customer_id = Customers.customer_id, Customer_Orders.customer_id = Customers.customer_id, Order_Items.order_id = Customer_Orders.order_id, Order_Items.product_id = Products.product_id]", "protein_institute": "Table building = [*, building_id, name, street_address, years_as_tallest, height_feet, floors]\nTable institution = [*, institution_id, institution, location, founded, type, enrollment, team, primary_conference, building_id]\nTable protein = [*, common_name, protein_name, divergence_from_human_lineage, accession_number, sequence_length, sequence_identity_to_human_protein, institution_id]\nforeign_keys = [Institution.building_id = building.building_id, protein.Institution_id = Institution.Institution_id]", "school_player": "Table school = [*, school_id, school, location, enrollment, founded, denomination, boys_or_girls, day_or_boarding, year_entered_competition, school_colors]\nTable school_details = [*, school_id, nickname, colors, league, class, division]\nTable school_performance = [*, school_id, school_year, class_a, class_aa]\nTable player = [*, player_id, player, team, age, position, school_id]\nforeign_keys = [school_details.School_ID = school.School_ID, school_performance.School_Id = school.School_ID, player.School_ID = school.School_ID]", "phone_1": "Table chip_model = [*, model_name, launch_year, ram_mib, rom_mib, slots, wifi, bluetooth]\nTable screen_mode = [*, graphics_mode, char_cells, pixels, hardware_colours, used_kb, map, type]\nTable phone = [*, company_name, hardware_model_name, accreditation_type, accreditation_level, date, chip_model, screen_mode]\nforeign_keys = [phone.chip_model = chip_model.Model_name, phone.screen_mode = screen_mode.Graphics_mode]", "tvshow": "Table tv_channel = [*, id, series_name, country, language, content, pixel_aspect_ratio_par, hight_definition_tv, pay_per_view_ppv, package_option]\nTable tv_series = [*, id, episode, air_date, rating, share, 18_49_rating_share, viewers_m, weekly_rank, channel]\nTable cartoon = [*, id, title, directed_by, written_by, original_air_date, production_code, channel]\nforeign_keys = [TV_series.Channel = TV_Channel.id, Cartoon.Channel = TV_Channel.id]", "wrestler": "Table wrestler = [*, wrestler_id, name, reign, days_held, location, event]\nTable elimination = [*, elimination_id, wrestler_id, team, eliminated_by, elimination_move, time]\nforeign_keys = [Elimination.Wrestler_ID = wrestler.Wrestler_ID]", "customer_complaints": "Table staff = [*, staff_id, gender, first_name, last_name, email_address, phone_number]\nTable customers = [*, customer_id, customer_type_code, address_line_1, address_line_2, town_city, state, email_address, phone_number]\nTable products = [*, product_id, parent_product_id, product_category_code, date_product_first_available, date_product_discontinued, product_name, product_description, product_price]\nTable complaints = [*, complaint_id, product_id, customer_id, complaint_outcome_code, complaint_status_code, complaint_type_code, date_complaint_raised, date_complaint_closed, staff_id]\nforeign_keys = [Complaints.customer_id = Customers.customer_id, Complaints.product_id = Products.product_id, Complaints.staff_id = Staff.staff_id]", "department_management": "Table department = [*, department_id, name, creation, ranking, budget_in_billions, num_employees]\nTable head = [*, head_id, name, born_state, age]\nTable management = [*, department_id, head_id, temporary_acting]\nforeign_keys = [management.head_ID = head.head_ID, management.department_ID = department.Department_ID]", "customers_and_products_contacts": "Table addresses = [*, address_id, line_1_number_building, city, zip_postcode, state_province_county, country]\nTable products = [*, product_id, product_type_code, product_name, product_price]\nTable customers = [*, customer_id, payment_method_code, customer_number, customer_name, customer_address, customer_phone, customer_email]\nTable contacts = [*, contact_id, customer_id, gender, first_name, last_name, contact_phone]\nTable customer_address_history = [*, customer_id, address_id, date_from, date_to]\nTable customer_orders = [*, order_id, customer_id, order_date, order_status_code]\nTable order_items = [*, order_item_id, order_id, product_id, order_quantity]\nforeign_keys = [Customer_Address_History.address_id = Addresses.address_id, Customer_Address_History.customer_id = Customers.customer_id, Customer_Orders.customer_id = Customers.customer_id, Order_Items.order_id = Customer_Orders.order_id, Order_Items.product_id = Products.product_id]", "company_1": "Table works_on = [*, essn, pno, hours]\nTable employee = [*, fname, minit, lname, ssn, bdate, address, sex, salary, super_ssn, dno]\nTable department = [*, dname, dnumber, mgr_ssn, mgr_start_date]\nTable project = [*, pname, pnumber, plocation, dnum]\nTable dependent = [*, essn, dependent_name, sex, bdate, relationship]\nTable dept_locations = [*, dnumber, dlocation]\nforeign_keys = []", "workshop_paper": "Table workshop = [*, workshop_id, date, venue, name]\nTable submission = [*, submission_id, scores, author, college]\nTable acceptance = [*, submission_id, workshop_id, result]\nforeign_keys = [Acceptance.Workshop_ID = workshop.Workshop_ID, Acceptance.Submission_ID = submission.Submission_ID]", "epinions_1": "Table item = [*, i_id, title]\nTable review = [*, a_id, u_id, i_id, rating, rank]\nTable useracct = [*, u_id, name]\nTable trust = [*, source_u_id, target_u_id, trust]\nforeign_keys = [review.i_id = item.i_id, review.u_id = useracct.u_id, trust.target_u_id = useracct.u_id, trust.source_u_id = useracct.u_id]", "party_host": "Table party = [*, party_id, party_theme, location, first_year, last_year, number_of_hosts]\nTable host = [*, host_id, name, nationality, age]\nTable party_host = [*, party_id, host_id, is_main_in_charge]\nforeign_keys = [party_host.Party_ID = party.Party_ID, party_host.Host_ID = host.Host_ID]", "product_catalog": "Table attribute_definitions = [*, attribute_id, attribute_name, attribute_data_type]\nTable catalogs = [*, catalog_id, catalog_name, catalog_publisher, date_of_publication, date_of_latest_revision]\nTable catalog_structure = [*, catalog_level_number, catalog_id, catalog_level_name]\nTable catalog_contents = [*, catalog_entry_id, catalog_level_number, parent_entry_id, previous_entry_id, next_entry_id, catalog_entry_name, product_stock_number, price_in_dollars, price_in_euros, price_in_pounds, capacity, length, height, width]\nTable catalog_contents_additional_attributes = [*, catalog_entry_id, catalog_level_number, attribute_id, attribute_value]\nforeign_keys = [Catalog_Structure.catalog_id = Catalogs.catalog_id, Catalog_Contents.catalog_level_number = Catalog_Structure.catalog_level_number, Catalog_Contents_Additional_Attributes.catalog_level_number = Catalog_Structure.catalog_level_number, Catalog_Contents_Additional_Attributes.catalog_entry_id = Catalog_Contents.catalog_entry_id]"}